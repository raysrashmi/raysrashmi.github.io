<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Rashmi Yadav]]></title>
  <link href="http://raysrashmi.com/atom.xml" rel="self"/>
  <link href="http://raysrashmi.com/"/>
  <updated>2014-09-11T20:46:28+02:00</updated>
  <id>http://raysrashmi.com/</id>
  <author>
    <name><![CDATA[Rashmi Yadav]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[New features in Rails 4.2]]></title>
    <link href="http://raysrashmi.com/2014/09/02/new-features-in-rails-4-2/"/>
    <updated>2014-09-02T15:42:00+02:00</updated>
    <id>http://raysrashmi.com/2014/09/02/new-features-in-rails-4-2</id>
    <content type="html"><![CDATA[<p><a href='http://edgeguides.rubyonrails.org/4_2_release_notes.html'>Rails 4.2 beta</a> has been released and final version is going to come out soon.</p>

<p>Listed are some feature are going introduced in version of Rails 4.2. You can also try them while it&rsquo;s beta.</p>

<ol>
<li><p><a href='http://edgeguides.rubyonrails.org/4_2_release_notes.html#active-job-action-mailer-deliver-later'>Active Job, ActionMailer #deliver_later</a></p></li>
<li><p><a href='http://edgeguides.rubyonrails.org/4_2_release_notes.html#adequate-record'>Adequate records</a></p></li>
<li><p><a href='http://edgeguides.rubyonrails.org/4_2_release_notes.html#web-console'>Web console</a></p></li>
<li><p><a href='http://edgeguides.rubyonrails.org/4_2_release_notes.html#foreign-key-support'>Foreign key support</a></p></li>
</ol>


<p>But apart from these there are more features which are going to ship in Rails 4.2.</p>

<p>Few of them are..</p>

<!--more-->


<h2><code>required</code> option for singular associations (<code>belongs_to</code> and <code>has_one</code>)</h2>

<p>Sometime we need to validate presence of associated object not the foreign key used to map the association</p>

<p>Lets say for each user there must be a account so we validate it like this &ndash;:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">User</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'>  <span class="n">belongs_to</span> <span class="ss">:account</span>
</span><span class='line'>  <span class="n">validates</span> <span class="ss">:account</span><span class="p">,</span> <span class="ss">presence</span><span class="p">:</span> <span class="kp">true</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>But in Rails 4.2 we just need to set <code>required</code> option to true which will validate associated object is present</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">User</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'>  <span class="n">belongs_to</span> <span class="ss">:account</span><span class="p">,</span> <span class="ss">required</span><span class="p">:</span> <span class="kp">true</span>
</span><span class='line'>  <span class="n">has_one</span> <span class="ss">:profile</span><span class="p">,</span> <span class="ss">required</span><span class="p">:</span> <span class="kp">true</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h2><code>required</code> option in generator for model and migration</h2>

<p>When we generate model we can pass <code>required</code> option  for references/associations</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>  <span class="n">rails</span> <span class="n">generate</span> <span class="n">model</span> <span class="no">Comment</span> <span class="ss">commentable</span><span class="p">:</span><span class="n">references</span><span class="p">{</span><span class="n">required</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>It will automatically set <code>required</code> true for <code>commentable</code> association</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Comment</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'>  <span class="n">belongs_to</span> <span class="ss">:commentable</span><span class="p">,</span> <span class="ss">required</span><span class="p">:</span> <span class="kp">true</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>And in migration set <code>null: false</code> for <code>commentable</code> association which is basically a database validation</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">CreateComments</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Migration</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">change</span>
</span><span class='line'>    <span class="n">create_table</span> <span class="ss">:comments</span> <span class="k">do</span> <span class="o">|</span><span class="n">t</span><span class="o">|</span>
</span><span class='line'>      <span class="n">t</span><span class="o">.</span><span class="n">references</span> <span class="ss">:commentable</span><span class="p">,</span> <span class="ss">index</span><span class="p">:</span> <span class="kp">true</span><span class="p">,</span> <span class="ss">null</span><span class="p">:</span> <span class="kp">false</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">t</span><span class="o">.</span><span class="n">timestamps</span> <span class="ss">null</span><span class="p">:</span> <span class="kp">false</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>We can also pass it with <code>polymorphic</code> option if we need polymorphic relation</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">rails</span> <span class="n">generate</span> <span class="n">model</span> <span class="no">Comment</span> <span class="ss">commentable</span><span class="p">:</span><span class="n">references</span><span class="p">{</span><span class="n">required</span><span class="p">,</span> <span class="n">polymorphic</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>This <code>required</code> option can also be passed in generating migration</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">rails</span> <span class="n">generate</span> <span class="n">migration</span> <span class="no">AddAccountToUsers</span> <span class="ss">account</span><span class="p">:</span><span class="n">references</span><span class="p">{</span><span class="n">required</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>validate and validate!</h2>

<h3>validate</h3>

<p>It runs all validations and returns <code>true</code> if no error found  otherwise return <code>false</code>.</p>

<p>It is alias of <code>valid?</code> method.</p>

<h3>validate!</h3>

<p>It runs all validations and returns <code>true</code> if no error found otherwise
raise <code>ActiveRecord::RecordInvalid</code> if any validation fails</p>

<h2><code>with_options</code> without explicit receiver</h2>

<p>In <code>with_options</code> block we have to pass explicit receiver whether it is required or not</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">User</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'> <span class="n">with_options</span> <span class="k">if</span><span class="p">:</span> <span class="ss">:is_admin?</span> <span class="k">do</span> <span class="o">|</span><span class="n">admin</span><span class="o">|</span>
</span><span class='line'>    <span class="n">admin</span><span class="o">.</span><span class="n">validates</span> <span class="ss">:name</span><span class="p">,</span> <span class="ss">presence</span><span class="p">:</span> <span class="kp">true</span>
</span><span class='line'>    <span class="n">admin</span><span class="o">.</span><span class="n">validates</span> <span class="ss">:email</span><span class="p">,</span> <span class="ss">presence</span><span class="p">:</span> <span class="kp">true</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now in Rails 4.2 we don&rsquo;t need to pass explicit receiver to <code>with_options</code> until it is required</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">User</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'> <span class="n">with_options</span> <span class="k">if</span><span class="p">:</span> <span class="ss">:is_admin?</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">validates</span> <span class="ss">:name</span><span class="p">,</span> <span class="ss">presence</span><span class="p">:</span> <span class="kp">true</span>
</span><span class='line'>    <span class="n">validates</span> <span class="ss">:email</span><span class="p">,</span> <span class="ss">presence</span><span class="p">:</span> <span class="kp">true</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Touch multiple attributes</h2>

<p>Before Rails 4.2 we can just pass one attribute in <code>touch</code> method</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">a</span> <span class="o">=</span> <span class="no">Article</span><span class="o">.</span><span class="n">first</span>
</span><span class='line'><span class="n">a</span><span class="o">.</span><span class="n">touch</span><span class="p">(</span><span class="ss">:published_at</span><span class="p">)</span> <span class="c1"># =&gt; true</span>
</span><span class='line'><span class="n">a</span><span class="o">.</span><span class="n">touch</span><span class="p">(</span><span class="ss">:published_at</span><span class="p">,</span> <span class="ss">:created_at</span><span class="p">)</span> <span class="c1">#=&gt; ArgumentError: wrong number of arguments (2 for 0..1)</span>
</span></code></pre></td></tr></table></div></figure>


<p>But in Rails 4.2 we can update multiple attributes at once with <code>touch</code> method</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">a</span> <span class="o">=</span> <span class="no">Article</span><span class="o">.</span><span class="n">first</span>
</span><span class='line'><span class="n">a</span><span class="o">.</span><span class="n">touch</span><span class="p">(</span><span class="ss">:published_at</span><span class="p">,</span> <span class="ss">:created_at</span><span class="p">)</span> <span class="c1">#=&gt; true</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Support for PostgreSQL citext data type</h2>

<p>Rails 4.2 added support for <a href='http://www.postgresql.org/docs/9.0/static/citext.html'><code>citext</code></a>
column type in PostgreSQL adapter.</p>

<p>But we have to enable extension before running migration because its additional supplied module</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">execute</span> <span class="s2">&quot;CREATE EXTENSION IF NOT EXISTS citext&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>citext</code> column type provides a case-insensitive character string type.</p>

<p>For example we have a <code>users</code> table with bio column as <code>citext</code> type</p>

<p>We have a user object with bio value as &lsquo;developer&rsquo; but we search with &lsquo;Developer&rsquo; it will return our user object in result</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">User</span><span class="o">.</span><span class="n">where</span><span class="p">(</span><span class="ss">bio</span><span class="p">:</span> <span class="s1">&#39;Developer&#39;</span><span class="p">)</span>
</span><span class='line'><span class="c1">#=&gt;SELECT &quot;users&quot;.* FROM &quot;users&quot; WHERE &quot;users&quot;.&quot;bio&quot; = $1  [[&quot;bio&quot;, &quot;Developer&quot;]]</span>
</span><span class='line'><span class="c1">#=&gt; #&lt;ActiveRecord::Relation [#&lt;User id: 1, name: nil, email: &quot;test@example.com&quot;, created_at: &quot;2014-08-30 17:51:17&quot;, updated_at: &quot;2014-08-30 17:51:17&quot;, role: nil, bio: &quot;developer&quot;&gt;]&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Internally <code>citext</code> calls lower when comparing values so we don&rsquo;t need to explicitly convert value in lowercase</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">SELECT</span> <span class="o">*</span> <span class="no">FROM</span> <span class="n">tab</span> <span class="no">WHERE</span> <span class="n">lower</span><span class="p">(</span><span class="n">col</span><span class="p">)</span> <span class="o">=</span> <span class="no">LOWER</span><span class="p">(</span><span class="sc">?)</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Empty your database</h2>

<p>Rails provides us few database related rake tasks such as to create/drop database and to run migrations.</p>

<p>There is a new rake task added <code>rake db:purge</code> to empty database for current environment.</p>

<p>It removes your data and tables from database and of course we can pass environment <code>RAILS_ENV</code> like any other rake task.</p>

<h2>New binstubs(bin/setup)</h2>

<p>We always need some set of commands to bootstrap our application.</p>

<p>Now in Rails 4.2 there is default <code>bin/setup</code> script where we can have all tasks to setup our application in quick and consistent way. It is located in bin directory.</p>

<p>There are some defaults commands given by Rails but we can add more as per our requirement.</p>

<h2>Transform Hash Values</h2>

<p>To modify Hash values call <code>transform_values</code> it accepts a block and apply the block operation to each value of hash</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">a</span> <span class="o">=</span> <span class="p">{</span><span class="ss">a</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span> <span class="ss">b</span><span class="p">:</span> <span class="mi">2</span><span class="p">,</span> <span class="ss">c</span><span class="p">:</span> <span class="mi">3</span><span class="p">}</span>
</span><span class='line'><span class="n">a</span><span class="o">.</span><span class="n">transform_values</span><span class="p">{</span> <span class="o">|</span><span class="n">a</span><span class="o">|</span><span class="n">a</span><span class="o">*</span><span class="mi">2</span> <span class="p">}</span> <span class="c1">#=&gt; {:a=&gt;2, :b=&gt;4, :c=&gt;6}</span>
</span></code></pre></td></tr></table></div></figure>


<p>There is also a bang version <code>transform_values!</code> which change original hash</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">a</span> <span class="o">=</span> <span class="p">{</span><span class="ss">a</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span> <span class="ss">b</span><span class="p">:</span> <span class="mi">2</span><span class="p">,</span> <span class="ss">c</span><span class="p">:</span> <span class="mi">3</span><span class="p">}</span>
</span><span class='line'><span class="n">a</span><span class="o">.</span><span class="n">transform_values!</span><span class="p">{</span> <span class="o">|</span><span class="n">a</span><span class="o">|</span><span class="n">a</span><span class="o">*</span><span class="mi">2</span> <span class="p">}</span> <span class="c1">#=&gt; {:a=&gt;2, :b=&gt;4, :c=&gt;6}</span>
</span><span class='line'><span class="n">a</span> <span class="c1">#=&gt; {:a=&gt;2, :b=&gt;4, :c=&gt;6}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Truncate String by words</h2>

<p>There is new method <code>truncate_words</code> which truncate a string by given number of words length</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="s1">&#39;This is fantastic place in this world&#39;</span><span class="o">.</span><span class="n">truncate_words</span><span class="p">(</span><span class="mi">3</span><span class="p">)</span> <span class="c1">#=&gt; &quot;This is fantastic...&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Pretty print for ActiveRecord object</h2>

<p>Now in Rails console/logs we can print ActiveRecord object output nicely
just pass that object to <code>pp</code> method</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">pp</span> <span class="no">User</span><span class="o">.</span><span class="n">last</span>
</span><span class='line'>
</span><span class='line'><span class="c1">#&lt;User:0x007f8fdf29f3a8</span>
</span><span class='line'> <span class="nb">id</span><span class="p">:</span> <span class="mi">2</span><span class="p">,</span>
</span><span class='line'> <span class="nb">name</span><span class="p">:</span> <span class="kp">nil</span><span class="p">,</span>
</span><span class='line'> <span class="ss">email</span><span class="p">:</span> <span class="kp">nil</span><span class="p">,</span>
</span><span class='line'> <span class="n">created_at</span><span class="p">:</span> <span class="no">Tue</span><span class="p">,</span> <span class="mo">02</span> <span class="no">Sep</span> <span class="mi">2014</span> <span class="mi">19</span><span class="p">:</span><span class="mi">18</span><span class="p">:</span><span class="mi">52</span> <span class="no">UTC</span> <span class="o">+</span><span class="mo">00</span><span class="p">:</span><span class="mo">00</span><span class="p">,</span>
</span><span class='line'> <span class="n">updated_at</span><span class="p">:</span> <span class="no">Tue</span><span class="p">,</span> <span class="mo">02</span> <span class="no">Sep</span> <span class="mi">2014</span> <span class="mi">19</span><span class="p">:</span><span class="mi">18</span><span class="p">:</span><span class="mi">52</span> <span class="no">UTC</span> <span class="o">+</span><span class="mo">00</span><span class="p">:</span><span class="mo">00</span><span class="p">,</span>
</span><span class='line'> <span class="ss">role</span><span class="p">:</span> <span class="s2">&quot;user&quot;</span><span class="p">,</span>
</span><span class='line'> <span class="ss">bio</span><span class="p">:</span> <span class="kp">nil</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Skip gems</h2>

<p>We can skip default gems to Gem file while creating new app with <code>--skip-gems</code> option. They will not be added to our <code>Gemfile</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">rails</span> <span class="kp">new</span> <span class="o">&lt;</span><span class="n">app</span> <span class="nb">name</span><span class="o">&gt;</span> <span class="o">--</span><span class="n">skip</span><span class="o">-</span><span class="n">gems</span> <span class="n">turbolinks</span> <span class="n">coffee</span><span class="o">-</span><span class="n">rails</span>
</span></code></pre></td></tr></table></div></figure>


<h3>References</h3>

<p>Here are some more articles about rails 4.2</p>

<ul>
<li><a href="http://edgeguides.rubyonrails.org/4_2_release_notes.html">http://edgeguides.rubyonrails.org/4_2_release_notes.html</a></li>
<li><a href="http://blog.newrelic.com/2014/04/25/ponies-rails-adequaterecord/">http://blog.newrelic.com/2014/04/25/ponies-rails-adequaterecord/</a></li>
<li><a href="http://blog.plataformatec.com.br/2014/07/the-new-html-sanitizer-in-rails-4-2/">http://blog.plataformatec.com.br/2014/07/the-new-html-sanitizer-in-rails-4-2/</a></li>
<li><a href="http://www.justinweiss.com/blog/2014/08/25/the-lesser-known-features-in-rails-4-dot-2/">http://www.justinweiss.com/blog/2014/08/25/the-lesser-known-features-in-rails-4-dot-2/</a></li>
</ul>


<p>Thanks to all Rails contributors for making Rails awesome :)</p>

<p>If you any feedback on this article let me know <a href='https://twitter.com/raysrashmi'>@raysrashnmi</a> on Twitter</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rails Routing Constraints]]></title>
    <link href="http://raysrashmi.com/2014/07/23/rails-routes-constraints/"/>
    <updated>2014-07-23T00:00:00+02:00</updated>
    <id>http://raysrashmi.com/2014/07/23/rails-routes-constraints</id>
    <content type="html"><![CDATA[<p>Routing is backbone of a web applications. When we are building applications using Rails we can manage routing for our app easily. I am going to explain a bit advance feature of routing in Rails</p>

<h2>What is routing constraints</h2>

<p>Few many times we require routes to behave differently and also want to do some routing based on specific conditions.</p>

<p> For example</p>

<ul>
<li><p> Constraint routes for http methods( put, post )</p></li>
<li><p>Want to show different home page for different users.</p></li>
<li><p>Want to restrict URL for some sub domain or range of IP addresses</p></li>
</ul>


<p>We can easily constraints our routes in Rails</p>

<h2>How many ways we can constraint our routes</h2>

<h3>Segment Constraints(Parameter Restriction)</h3>

<p>You can filter any parameter based on Regular expression</p>

<!--more-->


<p>Lets say we have route</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">resources</span> <span class="ss">:maps</span>
</span></code></pre></td></tr></table></div></figure>


<p>If we want to restrict it for certain range of IP addresses we can do like</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">resources</span> <span class="ss">:maps</span><span class="p">,</span> <span class="ss">constraints</span><span class="p">:</span> <span class="p">{</span> <span class="ss">ip</span><span class="p">:</span> <span class="sr">/172\.124\.\d+\.\d+/</span> <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>OR</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">constraints</span><span class="p">(</span> <span class="ss">ip</span><span class="p">:</span> <span class="sr">/172\.124\.\d+\.\d+/</span><span class="p">)</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">resources</span> <span class="ss">:maps</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Another example of filtering <code>id</code> parameter</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">match</span> <span class="s1">&#39;maps/:id&#39;</span><span class="p">,</span> <span class="ss">to</span><span class="p">:</span> <span class="s1">&#39;maps#show&#39;</span> <span class="p">,</span><span class="ss">constraints</span><span class="p">:</span> <span class="p">{</span> <span class="nb">id</span><span class="p">:</span> <span class="sr">/\d+/</span><span class="p">},</span> <span class="ss">via</span><span class="p">:</span> <span class="ss">:get</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now URL with <code>id</code> as integer only allowed to hit <code>maps#show</code> action</p>

<p>Can restrict <code>format</code> parameter</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">match</span> <span class="s1">&#39;maps/:id&#39;</span><span class="p">,</span> <span class="ss">to</span><span class="p">:</span> <span class="s1">&#39;maps#show&#39;</span> <span class="p">,</span><span class="ss">constraints</span><span class="p">:</span> <span class="p">{</span> <span class="nb">format</span><span class="p">:</span> <span class="s1">&#39;json&#39;</span> <span class="p">},</span> <span class="ss">via</span><span class="p">:</span> <span class="ss">:get</span>
</span></code></pre></td></tr></table></div></figure>


<p>It will generate route only for <code>json</code> format so if somebody try to open HTML format for this URL it won&rsquo;t hit maps show action.</p>

<h3>Request-Based Constraints</h3>

<p>We can also constraint routes on request object</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">get</span> <span class="s1">&#39;admin/&#39;</span><span class="p">,</span> <span class="ss">to</span><span class="p">:</span> <span class="s1">&#39;admin#show&#39;</span><span class="p">,</span> <span class="ss">constraints</span><span class="p">:</span> <span class="p">{</span> <span class="ss">subdomain</span><span class="p">:</span> <span class="s1">&#39;admin&#39;</span> <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now URL <code>admin.example.com/admin</code> will redirect to <code>show</code> action of <code>admin</code>
controller</p>

<h3>Dynamic Constraint(Dynamic request matching)</h3>

<ul>
<li>Using <code>matches?</code> method</li>
</ul>


<p>We can constraint route dynamically based on some specific criteria by creating a <code>matches?</code> method</p>

<p>Lets say we have to filter sub domain of URL</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">constraints</span> <span class="no">Subdomain</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">get</span> <span class="s1">&#39;*path&#39;</span><span class="p">,</span> <span class="ss">to</span><span class="p">:</span> <span class="s1">&#39;proxy#index&#39;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">Subdomain</span>
</span><span class='line'>  <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">matches?</span><span class="p">(</span><span class="n">request</span><span class="p">)</span>
</span><span class='line'>    <span class="p">(</span><span class="n">request</span><span class="o">.</span><span class="n">subdomain</span><span class="o">.</span><span class="n">present?</span> <span class="o">&amp;&amp;</span> <span class="n">request</span><span class="o">.</span><span class="n">subdomain</span><span class="o">.</span><span class="n">start_with?</span><span class="p">(</span><span class="s1">&#39;foobar&#39;</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>What we are doing here is checking for URL if it start with sub domain <code>foobar</code> then only hit <code>proxy#index</code> action. Your class must have <code>mathes?</code> method either class method or instance method. If you want to make it a instance method then do</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">constraints</span> <span class="no">Subdomain</span><span class="o">.</span><span class="n">new</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">get</span> <span class="s1">&#39;*path&#39;</span><span class="p">,</span> <span class="ss">to</span><span class="p">:</span> <span class="s1">&#39;proxy#index&#39;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Using <code>lambdas</code></li>
</ul>


<p>Instead of writing class we can also use <code>lambdas</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">get</span> <span class="s1">&#39;*path&#39;</span><span class="p">,</span> <span class="ss">to</span><span class="p">:</span> <span class="s1">&#39;proxy#index&#39;</span><span class="p">,</span> <span class="ss">constraints</span><span class="p">:</span> <span class="nb">lambda</span><span class="p">{</span><span class="o">|</span><span class="n">request</span><span class="o">|</span><span class="n">request</span><span class="o">.</span><span class="n">env</span><span class="o">[</span><span class="s1">&#39;SERVER_NAME&#39;</span><span class="o">].</span><span class="n">match</span><span class="p">(</span><span class="s1">&#39;foo.bar&#39;</span><span class="p">)}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Resource</p>

<ul>
<li><a href="http://guides.rubyonrails.org/routing.html">http://guides.rubyonrails.org/routing.html</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Splat operator as an argument in ruby]]></title>
    <link href="http://raysrashmi.com/2013/11/06/splat-operator-as-an-argument/"/>
    <updated>2013-11-06T00:00:00+01:00</updated>
    <id>http://raysrashmi.com/2013/11/06/splat-operator-as-an-argument</id>
    <content type="html"><![CDATA[<p>As we know we see <code>*args</code> as an argument in method definition it means we can pass
multiple parameters.
See the below example</p>

<!--more-->




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Test</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="o">*</span><span class="n">args</span><span class="p">)</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="n">args</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="no">Test</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="s1">&#39;a&#39;</span><span class="p">,</span> <span class="s1">&#39;b&#39;</span><span class="p">)</span> <span class="o">=&gt;</span>
</span><span class='line'><span class="n">a</span>
</span><span class='line'><span class="n">b</span>
</span></code></pre></td></tr></table></div></figure>


<p>But what if we just have asterisk(splat operator) as an argument?</p>

<p>I was looking Rails code base and found  asterisk<code>(*)</code> in an class initialize method.</p>

<p>Link: <a href="https://github.com/rails/rails/blob/master/railties/lib/rails/commands/server.rb#L42">https://github.com/rails/rails/blob/master/railties/lib/rails/commands/server.rb#L42</a></p>

<p>Let&rsquo;s take an example &ndash;:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">hello</span><span class="p">(</span><span class="n">a</span><span class="p">,</span> <span class="o">*</span><span class="p">)</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="n">a</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="n">hello</span><span class="p">(</span><span class="s1">&#39;rays&#39;</span><span class="p">,</span> <span class="s1">&#39;b&#39;</span><span class="p">)</span>
</span><span class='line'><span class="n">rays</span>
</span></code></pre></td></tr></table></div></figure>


<p>How many arguments you passed it wont generate any error</p>

<p>Let&rsquo;s take another example</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">A</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="n">argument</span><span class="o">=</span><span class="kp">nil</span><span class="p">)</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">argument</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s1">&#39;I am in Parent class&#39;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">B</span> <span class="o">&lt;</span> <span class="n">A</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">initialize</span><span class="p">()</span>
</span><span class='line'>   <span class="k">super</span>
</span><span class='line'>   <span class="nb">puts</span> <span class="s1">&#39;I am in Child class&#39;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">b</span> <span class="o">=</span> <span class="n">B</span><span class="o">.</span><span class="n">new</span> <span class="c1">#=&gt;</span>
</span><span class='line'><span class="n">I</span> <span class="n">am</span> <span class="k">in</span> <span class="no">Parent</span> <span class="k">class</span>
</span><span class='line'><span class="nc">I</span> <span class="n">am</span> <span class="k">in</span> <span class="no">Child</span> <span class="k">class</span>
</span><span class='line'>
</span><span class='line'><span class="nc">B</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="s1">&#39;a&#39;</span><span class="p">)</span> <span class="c1">#=&gt;</span>
</span><span class='line'><span class="sb">`initialize&#39;: wrong number of arguments (1 for 0) (ArgumentError)</span>
</span></code></pre></td></tr></table></div></figure>


<p>But now if we pass <code>*</code> as an argument in child class initialize method see what
happens.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">A</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="n">argument</span><span class="o">=</span><span class="kp">nil</span><span class="p">)</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">argument</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s1">&#39;I am in Parent class&#39;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">B</span> <span class="o">&lt;</span> <span class="n">A</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="o">*</span><span class="p">)</span>
</span><span class='line'>   <span class="k">super</span>
</span><span class='line'>   <span class="nb">puts</span> <span class="s1">&#39;I am in Child class&#39;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">B</span><span class="o">.</span><span class="n">new</span> <span class="c1">#=&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="n">I</span> <span class="n">am</span> <span class="k">in</span> <span class="no">Parent</span> <span class="k">class</span>
</span><span class='line'><span class="nc">I</span> <span class="n">am</span> <span class="k">in</span> <span class="no">Child</span> <span class="k">class</span>
</span><span class='line'>
</span><span class='line'><span class="nc">B</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="s1">&#39;a&#39;</span><span class="p">)</span> <span class="c1">#=&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="n">a</span>
</span><span class='line'><span class="n">I</span> <span class="n">am</span> <span class="k">in</span> <span class="no">Parent</span> <span class="k">class</span>
</span><span class='line'><span class="nc">I</span> <span class="n">am</span> <span class="k">in</span> <span class="no">Child</span> <span class="k">class</span>
</span></code></pre></td></tr></table></div></figure>


<p>You can see passing * as an argument help to send parameters for parent class even though child class doesn&rsquo;t require those arguments</p>

<p>Note: <code>*</code> is called splat operator in Ruby.</p>

<p>See some sample Rails code which is using <code>*</code></p>

<p><a href="https://github.com/rails/rails/blob/v4.0.0/railties/lib/rails/commands/server.rb#L40">https://github.com/rails/rails/blob/v4.0.0/railties/lib/rails/commands/server.rb#L40</a>
<a href="https://github.com/rack/rack/blob/1.5.2/lib/rack/server.rb#L178">https://github.com/rack/rack/blob/1.5.2/lib/rack/server.rb#L178</a></p>

<p>It was new to me so thought to share with you guys. I hope you can get it if you do not know about this already.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[jQuery attr('value') and val()]]></title>
    <link href="http://raysrashmi.com/2013/08/12/jquery-val-and-attr/"/>
    <updated>2013-08-12T00:11:00+02:00</updated>
    <id>http://raysrashmi.com/2013/08/12/jquery-val-and-attr</id>
    <content type="html"><![CDATA[<p>Here is a short tip about using <strong>$(obj).val()</strong> and <strong>$(obj).attr(&lsquo;value&rsquo;)</strong>.
I was fixing a bug in ajax request with some params
then i found that there is a difference <code>val()</code> method and <code>attr(&lsquo;value&rsquo;)</code>
I never faced this problem before. I thought to share this with you guys.</p>

<!--more-->


<p>I had an text field</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;input</span> <span class="na">class=</span><span class="s">&quot;blur_text&quot;</span> <span class="na">id=</span><span class="s">&quot;search_box_location_input&quot;</span> <span class="na">name=</span><span class="s">&quot;location&quot;</span> <span class="na">placeholder=</span><span class="s">&quot;Address, City, State or Zip&quot;</span> <span class="na">type=</span><span class="s">&quot;text&quot;</span> <span class="na">value=</span><span class="s">&quot;New York&quot;</span><span class="nt">&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>I had to send the value of this text field to server side</p>

<p>So if I do</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>  $(&quot;#search_box_location_input&quot;).attr(&#39;value&#39;) =&gt; &quot;New York&quot;
</span></code></pre></td></tr></table></div></figure>


<p>Result is &ldquo;New York&rdquo;</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>  $(&quot;#search_box_location_input&quot;).val() =&gt; &quot;Address, City, State or Zip&quot;
</span></code></pre></td></tr></table></div></figure>


<p>It gives the the value entered in text field and if nothing then the placeholder value</p>

<p>It means <code>val()</code> gives the actual value that is there in text field. <code>$(obj).attre(&lsquo;value&rsquo;)</code> it actually give the value of attribute &lsquo;value&rsquo;</p>

<p>Its is better to use <code><strong>val()</strong></code> method to get the value of input field</p>

<p>Read about <code>val()</code> method and <code>attr</code></p>

<ul>
<li><a href="http://api.jquery.com/val/">http://api.jquery.com/val/</a></li>
<li><a href="http://api.jquery.com/attr/">http://api.jquery.com/attr/</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rails 4 Directory Structure]]></title>
    <link href="http://raysrashmi.com/2013/07/09/rails4-directory-structure/"/>
    <updated>2013-07-09T00:00:00+02:00</updated>
    <id>http://raysrashmi.com/2013/07/09/rails4-directory-structure</id>
    <content type="html"><![CDATA[<p><img src="http://farm6.staticflickr.com/5443/9241313505_ac035bd643_m_d.jpg"></p>

<p>Rails 4 is released. Lots of new features has been added to rails.
Here we will see what new directories have been added.</p>

<p>  We will create a sample app in rails 4 so that it will be easy to see the new structure.
  I am assuming  you have updated your rails.
  To check current version of rails run following command:</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">rails</span> <span class="o">-</span><span class="n">v</span>
</span></code></pre></td></tr></table></div></figure>


<p>  It should be Rails 4.0.0</p>

<!--more-->


<p>  Now create a very simple rails application</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">rails</span> <span class="kp">new</span>  <span class="n">blog</span>
</span></code></pre></td></tr></table></div></figure>


<p>  It creates a our app directory . You will see there are some new directories and files.
  Lets go to each one by one</p>

<h2>app/</h2>

<p>  In this directory there is new <b>concerns/</b> dir under controllers/ and models/.
  <a href='http://37signals.com/svn/posts/3372-put-chubby-models-on-a-diet-with-concerns'>Concerns</a>
  are added to manage your models/controllers in a better way .</p>

<p>  Mixins and modules code can be put under this dir.
  Lets say in our blog application we have user model and post model and we require to add comments for both model
  so we created a commentable module in our concerns/ dir and included in both model.</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>  <span class="k">module</span> <span class="nn">Commentable</span>
</span><span class='line'>    <span class="kp">extend</span> <span class="ss">ActiveSupport</span><span class="p">:</span><span class="ss">:Concern</span>
</span><span class='line'>    <span class="k">def</span> <span class="nf">comments</span>
</span><span class='line'>      <span class="n">comments</span><span class="o">.</span><span class="n">map</span><span class="p">(</span><span class="o">&amp;</span><span class="ss">:text</span><span class="p">)</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">class</span> <span class="nc">User</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'>    <span class="kp">include</span> <span class="no">Commentable</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">class</span> <span class="nc">Post</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'>    <span class="kp">include</span> <span class="no">Commentable</span>
</span><span class='line'>  <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>  Now suppose we need to add one more module noteable to our model post.</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>  <span class="k">module</span> <span class="nn">Noteable</span>
</span><span class='line'>    <span class="kp">extend</span> <span class="ss">ActiveSupport</span><span class="p">:</span><span class="ss">:Concern</span>
</span><span class='line'>    <span class="n">included</span> <span class="k">do</span>
</span><span class='line'>      <span class="n">has_many</span> <span class="ss">:notes</span>
</span><span class='line'>      <span class="n">validated</span> <span class="ss">:note</span><span class="p">,</span> <span class="ss">presence</span><span class="p">:</span> <span class="kp">true</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">class</span> <span class="nc">Post</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'>    <span class="kp">include</span> <span class="no">Commentable</span>
</span><span class='line'>    <span class="kp">include</span> <span class="no">Noteable</span>
</span><span class='line'>  <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>But we can also include Commentable to Noteable.</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">module</span> <span class="nn">Noteable</span>
</span><span class='line'>  <span class="kp">extend</span> <span class="ss">ActiveSupport</span><span class="p">:</span><span class="ss">:Concern</span>
</span><span class='line'>  <span class="kp">include</span> <span class="no">Commentable</span>
</span><span class='line'>  <span class="n">included</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">has_many</span> <span class="ss">:notes</span>
</span><span class='line'>    <span class="n">validated</span> <span class="ss">:note</span><span class="p">,</span> <span class="ss">presence</span><span class="p">:</span> <span class="kp">true</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">Post</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'>  <span class="kp">include</span> <span class="no">Noteable</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Because of line &ldquo;extend ActiveSupport::Concern
&rdquo; both Commentable and Noteable are accessible for Post class.</p>

<p>Its easy to cross sharing of code among models and to make your model clean.</p>

<h2>bin/</h2>

<p>App executables bundle, rails and rake are under this dir. So dont need to run &lsquo;bundle exec&rsquo; before any rails command.
<a href='https://github.com/sstephenson/rbenv/wiki/Understanding-binstubs'>Binstubs</a> can also be generated using bundle command ,bundle 1.3 added spports for generating binstubs.
What Binstubs are executables required to prepare the environment before original executable.</p>

<p>When we do</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">gem</span> <span class="n">install</span> <span class="n">cucumber</span>
</span></code></pre></td></tr></table></div></figure>


<p>an executable file is genearted in gems//cucumber-1.3.2/bin dir(i am using rvm here)</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">~</span><span class="sr">/.rvm/</span><span class="n">gems</span><span class="o">/</span><span class="n">ruby</span><span class="o">-</span><span class="mi">1</span><span class="o">.</span><span class="mi">9</span><span class="o">.</span><span class="mi">3</span><span class="o">-</span><span class="n">p448</span><span class="o">/</span><span class="n">gems</span><span class="o">/</span><span class="n">cucumber</span><span class="o">-</span><span class="mi">1</span><span class="o">.</span><span class="mi">3</span><span class="o">.</span><span class="mi">2</span><span class="o">/</span><span class="n">bin</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now we can generate using bundle command</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'> <span class="n">bundle</span> <span class="n">binstubs</span> <span class="n">cucumber</span>
</span></code></pre></td></tr></table></div></figure>


<p>It wil genrate executable in bin/. Having executables within your app ensures that they are using app ruby and gems.</p>

<h2>initializers/filter_parameter_logging.rb</h2>

<p>We use config.filter_parameters in config/application.rb to filter out parameters which we dont want to show in log files.
But Its moved to filter_parameter_logging.rb under initializers dir</p>

<p>Lets say we have an attribute customer_id of customer model and we want to filter in our log files then just write</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Rails</span><span class="o">.</span><span class="n">application</span><span class="o">.</span><span class="n">config</span><span class="o">.</span><span class="n">filter_parameters</span> <span class="o">+=</span> <span class="o">[</span><span class="ss">:customer_id</span><span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<p>After restarting your server if there is any request having customer_id parameter.
it will not show the value of customer_id
<img src="http://farm6.staticflickr.com/5347/9236715843_335affed17_b.jpg"></p>

<h2>doc/</h2>

<p>Doc has been removed from rails directory.
Its is extracted in <a href='https://github.com/voloko/sdoc/'>sdoc</a> gem and added to Gemfile by default so still you can generate docs by running following rake task</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">bundle</span> <span class="nb">exec</span> <span class="n">rake</span> <span class="ss">doc</span><span class="p">:</span><span class="n">rails</span>
</span></code></pre></td></tr></table></div></figure>


<h2>script/</h2>

<p>It has been removed and rails executable is moved to bin/ dir</p>

<h2>test/</h2>

<p>This directory has been changed quite a bit.</p>

<ul>
<li><p>Now we have controllers and models in place of functionals and units</li></p></li>
<li><p>We also have helpers and mailers dir under test by default</li></p></li>
</ul>


<p>Performance test has been extracted to a new <a href='https://github.com/rails/rails-perftest'>Gem</a>. So performance dir is not under test by default</p>

<p>Corresponding rake task for test has also changed &ndash;:</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">rake</span> <span class="nb">test</span><span class="ss">:controllers</span>
</span><span class='line'><span class="n">rake</span> <span class="nb">test</span><span class="ss">:models</span>
</span><span class='line'><span class="n">rake</span> <span class="nb">test</span><span class="ss">:helpers</span>
</span><span class='line'><span class="n">rake</span> <span class="nb">test</span><span class="ss">:mailers</span>
</span></code></pre></td></tr></table></div></figure>


<h2>vendor/</h2>

<p>Rails plugins are already gone away so this dir is no more needed.</p>

<h2>scaffold</h2>

<p>   Our favorite rails command &lsquo;scaffold&rsquo; gives us few new files.
Lets create new scaffold</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">rails</span> <span class="n">generate</span> <span class="n">scaffold</span> <span class="n">list</span> <span class="ss">title</span><span class="p">:</span><span class="n">string</span>
</span></code></pre></td></tr></table></div></figure>


<p>You will see there are two new files</p>

<ul>
<li>index.json.builder</li>
<li>show.json.builder</li>
</ul>


<p>These files can be used for responding data in JSON format.
These are generated by <a href='https://github.com/rails/jbuilder'>jbuilder</a>
<a href='http://rubygems.org/'>Gem</a>. It is included in Gemfile by default.</p>

<h3>Wrap up</h3>

<p>I hope this post will be useful for you. If there is any mistake in this post
just let me know.</p>

<p>There is lot to learn about rails 4. If you want here are some links</p>

<ul>
<li><a href="http://railscasts.com/episodes/400-what-s-new-in-rails-4?view=asciicast">http://railscasts.com/episodes/400-what-s-new-in-rails-4?view=asciicast</a></li>
<li><a href="http://edgeguides.rubyonrails.org/4_0_release_notes.html">http://edgeguides.rubyonrails.org/4_0_release_notes.html</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The Basics of Caching and Cache Digests]]></title>
    <link href="http://raysrashmi.com/2013/04/06/the-basics-of-caching-and-cache-digestes/"/>
    <updated>2013-04-06T00:00:00+02:00</updated>
    <id>http://raysrashmi.com/2013/04/06/the-basics-of-caching-and-cache-digestes</id>
    <content type="html"><![CDATA[<p>Recently posted a blog about basics of caching and cache digests on Rubysource. If you are going to apply caching in your app this blog will help you.</p>

<p>You can find blog on <a href="http://rubysource.com/caching-cache-digest/"> RubySource</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rails 4 Quick Look Strong Parameters]]></title>
    <link href="http://raysrashmi.com/2012/12/09/rails-4-quick-look-strong-parameters/"/>
    <updated>2012-12-09T00:00:00+01:00</updated>
    <id>http://raysrashmi.com/2012/12/09/rails-4-quick-look-strong-parameters</id>
    <content type="html"><![CDATA[<p>Strong Parameters is a new feature coming with Rails4.
Its about Mass-assignment protection in controller instead of model.
If you are keen to know more about it- <a href="http://rubysource.com/rails-4-quick-look-strong-parameters/">read it on RubySource</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Polymorphic Association with has_many :through]]></title>
    <link href="http://raysrashmi.com/2012/06/07/polymorphic-association-has_many-through/"/>
    <updated>2012-06-07T00:00:00+02:00</updated>
    <id>http://raysrashmi.com/2012/06/07/polymorphic-association-has_many-through</id>
    <content type="html"><![CDATA[<p>Hi Folks,</p>

<p>
In Rails we have Ploymorphic Association whenever we need to connect one model to more than one model.
I had a situation where i need polymorphic association with has_many :through
<!--more-->

Here I am showing an simple example of <b>polymorphic association with <code>has_many :through</code></b>
</p>


<p>
We have <code>Contact</code> , <code>Plan</code> and <code>Template</code> as a <code>ActiveRecord</code> Classes.
</p>


<p>
We have following scenarios.
 <ol>
   <li><code>Plan has_many Contacts</code></li>
   <li><code> Contact has_many Plans </code></li>
   <li><code>Template has_many Contacts</code></li>
   <li><code>Contact has_many Templates</code> which is vice versa of 3.</li>
 </ol>
</p>


<p><strong>So here is the main problem. Here to solve this we need two more tables other then <code>Plans</code> , <code>Contants</code>  and <code>Templates</code>. </strong></p>




<p>My <code> Plan </code> Model looks like:</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Plan</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'>  <span class="n">has_many</span> <span class="ss">:plan_contacts</span>
</span><span class='line'>  <span class="n">has_many</span> <span class="ss">:contacts</span> <span class="p">,</span><span class="ss">:through</span> <span class="o">=&gt;</span> <span class="ss">:plan_contacts</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<p>My <code> Template </code> Model looks like:</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Template</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'>  <span class="n">has_many</span> <span class="ss">:template_contacts</span>
</span><span class='line'>  <span class="n">has_many</span> <span class="ss">:contacts</span> <span class="p">,</span><span class="ss">:through</span> <span class="o">=&gt;</span> <span class="ss">:template_contacts</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<p>My <code> Contact </code> Model looks like:</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Contact</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'>  <span class="n">has_many</span> <span class="ss">:template_contacts</span>
</span><span class='line'>  <span class="n">has_many</span> <span class="ss">:plan_contacts</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">has_many</span> <span class="ss">:templates</span> <span class="p">,</span><span class="ss">:through</span> <span class="o">=&gt;</span> <span class="ss">:template_contacts</span>
</span><span class='line'>  <span class="n">has_many</span> <span class="ss">:plans</span> <span class="p">,</span><span class="ss">:through</span> <span class="o">=&gt;</span> <span class="ss">:plan_contacts</span>
</span><span class='line'>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<p>
And here are two different tables for handling <code>many_to_many</code>
</p>


<p>
Handling <code>Plan</code> and <code> Contact</code> here.
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">PlanContact</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'>  <span class="n">belongs_to</span> <span class="ss">:plan</span>
</span><span class='line'>  <span class="n">belongs_to</span> <span class="ss">:contact</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<p>Handling <code>Template</code> and <code> Contact</code> here.</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">TemplateContact</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'>  <span class="n">belongs_to</span> <span class="ss">:template</span>
</span><span class='line'>  <span class="n">belongs_to</span> <span class="ss">:contact</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<p><strong>This problem can be solved using only one table. Just we need to mark that table as a polymorphic.</strong></p>




<p>We are calling that tables as <code> contact_details</code>. Here is class looks like.</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">ContactDetail</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'>  <span class="n">belongs_to</span> <span class="ss">:contactable</span><span class="p">,</span> <span class="ss">:polymorphic</span> <span class="o">=&gt;</span> <span class="kp">true</span>
</span><span class='line'>  <span class="n">belongs_to</span> <span class="ss">:contact</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<p>Migration should look like:</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">CreateContactDetails</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Migration</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">change</span>
</span><span class='line'>    <span class="n">create_table</span> <span class="ss">:contact_details</span> <span class="k">do</span> <span class="o">|</span><span class="n">t</span><span class="o">|</span>
</span><span class='line'>      <span class="n">t</span><span class="o">.</span><span class="n">integer</span> <span class="ss">:contact_id</span>
</span><span class='line'>      <span class="n">t</span><span class="o">.</span><span class="n">integer</span> <span class="ss">:contactable_id</span>
</span><span class='line'>      <span class="n">t</span><span class="o">.</span><span class="n">string</span> <span class="ss">:contactable_type</span>
</span><span class='line'>      <span class="n">t</span><span class="o">.</span><span class="n">timestamps</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<p>Now change your <code> Contact </code> model like:</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Contact</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'>  <span class="n">has_many</span> <span class="ss">:plans</span> <span class="p">,</span><span class="ss">:through</span> <span class="o">=&gt;</span> <span class="ss">:contact_details</span><span class="p">,</span> <span class="ss">:source</span> <span class="o">=&gt;</span> <span class="ss">:contactable</span><span class="p">,</span> <span class="ss">:source_type</span> <span class="o">=&gt;</span> <span class="s1">&#39;Plan&#39;</span>
</span><span class='line'>  <span class="n">has_many</span> <span class="ss">:templates</span> <span class="p">,</span><span class="ss">:through</span> <span class="o">=&gt;</span> <span class="ss">:contact_details</span><span class="p">,</span> <span class="ss">:source</span> <span class="o">=&gt;</span> <span class="ss">:contactable</span><span class="p">,</span> <span class="ss">:source_type</span> <span class="o">=&gt;</span> <span class="s1">&#39;Template&#39;</span>
</span><span class='line'>  <span class="n">has_many</span> <span class="ss">:contact_details</span>
</span><span class='line'>  <span class="n">accepts_nested_attributes_for</span> <span class="ss">:plans</span><span class="p">,</span><span class="ss">:templates</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<p>Now change your <code> Plan </code> model like:</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>  <span class="k">class</span> <span class="nc">Plan</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'>    <span class="n">has_many</span> <span class="ss">:contacts</span><span class="p">,</span><span class="ss">:through</span> <span class="o">=&gt;</span> <span class="ss">:contact_details</span>
</span><span class='line'>    <span class="n">has_many</span> <span class="ss">:contact_details</span><span class="p">,</span> <span class="ss">:as</span> <span class="o">=&gt;</span> <span class="ss">:contactable</span>
</span><span class='line'>  <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<p>Same way <code> Template </code> model like:</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>  <span class="k">class</span> <span class="nc">Template</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'>    <span class="n">has_many</span> <span class="ss">:contacts</span><span class="p">,</span><span class="ss">:through</span> <span class="o">=&gt;</span> <span class="ss">:contact_details</span>
</span><span class='line'>    <span class="n">has_many</span> <span class="ss">:contact_details</span><span class="p">,</span> <span class="ss">:as</span> <span class="o">=&gt;</span> <span class="ss">:contactable</span>
</span><span class='line'>  <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<p>So you can see we can use one table(contact_details) for both plan and template</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'> <span class="n">contact</span>  <span class="o">=</span> <span class="no">Contact</span><span class="o">.</span><span class="n">create</span><span class="p">(</span><span class="ss">:name</span> <span class="o">=&gt;</span> <span class="s1">&#39;Rays&#39;</span><span class="p">)</span>
</span><span class='line'> <span class="n">template</span> <span class="o">=</span> <span class="no">Template</span><span class="o">.</span><span class="n">create</span><span class="p">(</span><span class="ss">:name</span> <span class="o">=&gt;</span> <span class="s1">&#39;template 1&#39;</span><span class="p">)</span>
</span><span class='line'> <span class="n">plan</span> <span class="o">=</span> <span class="no">Plan</span><span class="o">.</span><span class="n">create</span><span class="p">(</span><span class="ss">:name</span> <span class="o">=&gt;</span><span class="s1">&#39;plan&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'> <span class="n">contact</span><span class="o">.</span><span class="n">plans</span> <span class="o">&lt;&lt;</span> <span class="n">plan</span>
</span><span class='line'> <span class="n">contact</span><span class="o">.</span><span class="n">templates</span> <span class="o">&lt;&lt;</span> <span class="n">template</span>
</span><span class='line'>
</span><span class='line'> <span class="n">template</span><span class="o">.</span><span class="n">contacts</span> <span class="o">=&gt;</span> <span class="o">[</span><span class="n">contact</span><span class="o">]</span>
</span><span class='line'> <span class="n">plan</span><span class="o">.</span><span class="n">contacts</span> <span class="o">=&gt;</span> <span class="o">[</span><span class="n">contact</span><span class="o">]</span>
</span><span class='line'> <span class="n">contact</span><span class="o">.</span><span class="n">templates</span> <span class="o">=&gt;</span> <span class="o">[</span><span class="n">template</span><span class="o">]</span>
</span><span class='line'> <span class="n">contact</span><span class="o">.</span><span class="n">plans</span> <span class="o">=&gt;</span> <span class="o">[</span><span class="n">plans</span><span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>




<p>so if you have <strong>accepts_nested_attributes_for :template</strong> then you can create template for contact in a form</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'> <span class="no">Contact</span><span class="o">.</span><span class="n">create</span><span class="p">(</span><span class="ss">:name</span> <span class="o">=&gt;</span> <span class="s1">&#39;abc&#39;</span><span class="p">,</span><span class="ss">:templates_attributes</span> <span class="o">=&gt;</span> <span class="p">{</span><span class="s1">&#39;0&#39;</span> <span class="o">=&gt;</span> <span class="p">{</span><span class="s1">&#39;name&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;Tech&#39;</span><span class="p">}})</span>
</span></code></pre></td></tr></table></div></figure>




<p> it will create an entry in templates table and and entry in contact_details</p>


<p>So in this way we dont need to write much code.we can reduce tables number </p>




<p>I hope it will be helpful for you</p>




<p><strong>Reference links :</strong>
 <ul>
   <li><a href="http://guides.rubyonrails.org/association_basics.html#the-has_many-through-association" title="http://guides.rubyonrails.org/association_basics.html#the-has_many-through-association">http://guides.rubyonrails.org/association_basics.html#the-has_many-through-association</a></li>
   <li><a href="http://railscasts.com/episodes/154-polymorphic-association" title="http://railscasts.com/episodes/154-polymorphic-association">http://railscasts.com/episodes/154-polymorphic-association</a></li>
 </ul>


</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Enhance Rails Models]]></title>
    <link href="http://raysrashmi.com/2012/05/05/enhance-rails-models/"/>
    <updated>2012-05-05T00:00:00+02:00</updated>
    <id>http://raysrashmi.com/2012/05/05/enhance-rails-models</id>
    <content type="html"><![CDATA[<p>In Rails Models play a important part in our Rails App.We should keep are model pretty,not having dirty code
Here i am just reminding you some basic points to refactor a model.</p>

<!--more-->




<p>
  <strong>1. Follow law of Demeter(In rails it means use only one dot)</strong>


<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Author</span>  <span class="o">&lt;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'>  <span class="n">has_many</span> <span class="ss">:books</span>
</span><span class='line'>  <span class="n">has_one</span>  <span class="ss">:address</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">Book</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'>  <span class="n">belongs_to</span> <span class="ss">:author</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">Address</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'>  <span class="n">belongs_to</span> <span class="ss">:author</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>

  <p>So if in a view we have something like</p>
  
<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>    <span class="vi">@book</span><span class="o">.</span><span class="n">author</span><span class="o">.</span><span class="n">name</span>
</span><span class='line'>    <span class="vi">@book</span><span class="o">.</span><span class="n">author</span><span class="o">.</span><span class="n">address</span><span class="o">.</span><span class="n">street</span>
</span><span class='line'>    <span class="vi">@book</span><span class="o">.</span><span class="n">author</span><span class="o">.</span><span class="n">address</span><span class="o">.</span><span class="n">city</span>
</span><span class='line'>    <span class="vi">@book</span><span class="o">.</span><span class="n">author</span><span class="o">.</span><span class="n">address</span><span class="o">.</span><span class="n">state</span>
</span><span class='line'>
</span></code></pre></td></tr></table></div></figure>

  Here we are calling an object&#8217;s related object using a third(book -> customer -> address)

  Luckily in Rails we have Delegate that can escape us from this situation


<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Author</span>  <span class="o">&lt;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'>  <span class="n">has_many</span> <span class="ss">:books</span>
</span><span class='line'>  <span class="n">has_one</span>  <span class="ss">:address</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">Book</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'>  <span class="n">belongs_to</span> <span class="ss">:author</span><span class="err">&#39;</span>
</span><span class='line'>  <span class="n">delegate</span> <span class="ss">:name</span><span class="p">,</span>
</span><span class='line'>           <span class="ss">:street</span><span class="p">,</span>
</span><span class='line'>           <span class="ss">:city</span><span class="p">,</span>
</span><span class='line'>           <span class="ss">:state</span><span class="p">,</span>
</span><span class='line'>           <span class="ss">:to</span> <span class="o">=&gt;</span> <span class="ss">:author</span><span class="p">,</span> <span class="ss">:prefix</span> <span class="o">=&gt;</span> <span class="kp">true</span><span class="p">,</span> <span class="ss">:allow_nil</span> <span class="o">=&gt;</span> <span class="kp">true</span>
</span><span class='line'>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">Address</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'>  <span class="n">belongs_to</span> <span class="ss">:author</span>
</span><span class='line'>  <span class="n">delegate</span> <span class="ss">:street</span><span class="p">,</span><span class="ss">:city</span><span class="p">,</span><span class="ss">:state</span><span class="p">,</span> <span class="ss">:to</span> <span class="o">=&gt;</span> <span class="ss">:address</span> <span class="p">,</span><span class="ss">:allow_nil</span> <span class="o">=&gt;</span> <span class="kp">true</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>

<p>So if in a view we have something like</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>  <span class="vi">@book</span><span class="o">.</span><span class="n">author_name</span>
</span><span class='line'>  <span class="vi">@book</span><span class="o">.</span><span class="n">author_street</span>
</span><span class='line'>  <span class="vi">@book</span><span class="o">.</span><span class="n">author_city</span>
</span><span class='line'>  <span class="vi">@book</span><span class="o">.</span><span class="n">author_state</span>
</span></code></pre></td></tr></table></div></figure>

<p>Now we have just only dot.Here :allow_nil option prevents the error call method on nil object</p>

</p>


<p>
<strong>2. Use callback and validation.instead of writing large code in your method</strong>


<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">User</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'>  <span class="n">email_confirmation</span>
</span><span class='line'>  <span class="kp">attr_accessor</span> <span class="ss">:email_confirmation</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">user_save</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">email</span> <span class="o">&amp;&amp;</span> <span class="n">email_confirmation</span> <span class="o">&amp;&amp;</span> <span class="n">save</span>
</span><span class='line'>     <span class="c1">#send_email</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


Instead of doing that you can use a call back after_create

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">User</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'>  <span class="n">validates</span> <span class="ss">:email</span><span class="p">,</span> <span class="ss">:confirmation</span> <span class="o">=&gt;</span> <span class="kp">true</span>
</span><span class='line'>  <span class="n">validates</span> <span class="ss">:email_confirmation</span><span class="p">,</span> <span class="ss">:presence</span> <span class="o">=&gt;</span> <span class="kp">true</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">after_create</span> <span class="ss">:send_email</span>
</span><span class='line'>
</span><span class='line'>  <span class="kp">private</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">send_email</span>
</span><span class='line'>   <span class="c1">#send_email</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


So now when you create user it validates if email and email_confirmation attribute is there will send email just after saving the user
(here you don&#8217;t need to define attr_accessor :email_confirmation and don&#8217;t need to tae attr email_confirmation in db table )
</p>


<p>
<strong>3. Include Modules</strong>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Order</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'>  <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">find_purchased</span>
</span><span class='line'>    <span class="c1"># ...</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">find_waiting_for_review</span>
</span><span class='line'>     <span class="c1"># ...</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">find_waiting_for_sign_off</span>
</span><span class='line'>    <span class="c1">#.....</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">find_waiting_for_sign_off</span>
</span><span class='line'>   <span class="c1">#...</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">advanced_search</span><span class="p">(</span><span class="n">fields</span><span class="p">,</span> <span class="n">options</span> <span class="o">=</span> <span class="p">{})</span>
</span><span class='line'>   <span class="c1">#...</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">simple_search</span><span class="p">(</span><span class="n">terms</span><span class="p">)</span>
</span><span class='line'>   <span class="c1">#...</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">to_xml</span>
</span><span class='line'>   <span class="c1">#...</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">to_json</span>
</span><span class='line'>   <span class="c1">#...</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">to_csv</span>
</span><span class='line'>    <span class="c1">#...</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">to_pdf</span>
</span><span class='line'>    <span class="c1">#...</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


Modules allow you to extract behavior into separate files.Modules also serve to group related information into labeled namespaces.Its improve readability of code

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Order</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'>  <span class="kp">extend</span> <span class="no">OrderStateFinders</span>
</span><span class='line'>  <span class="kp">extend</span> <span class="no">OrderSearchers</span>
</span><span class='line'>  <span class="kp">include</span> <span class="no">OrderExporters</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># lib/order_state_finders.rb</span>
</span><span class='line'><span class="k">module</span> <span class="nn">OrderStateFinders</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">find_purchased</span>
</span><span class='line'>    <span class="c1">#...</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">find_waiting_for_review</span>
</span><span class='line'>    <span class="c1">#...</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">find_waiting_for_sign_off</span>
</span><span class='line'>    <span class="c1">#...</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># lib/order_searchers.rb</span>
</span><span class='line'><span class="k">module</span> <span class="nn">OrderSearchers</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">advanced_search</span><span class="p">(</span><span class="n">fields</span><span class="p">,</span> <span class="n">options</span> <span class="o">=</span> <span class="p">{})</span>
</span><span class='line'>    <span class="c1"># ...</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">simple_search</span><span class="p">(</span><span class="n">terms</span><span class="p">)</span>
</span><span class='line'>    <span class="c1"># ...</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># lib/order_exporters.rb</span>
</span><span class='line'><span class="k">module</span> <span class="nn">OrderExporters</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">to_xml</span>
</span><span class='line'>    <span class="c1"># ...</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">to_json</span>
</span><span class='line'>    <span class="c1"># ...</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">to_csv</span>
</span><span class='line'>   <span class="c1"># ...</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">to_pdf</span>
</span><span class='line'>    <span class="c1"># ...</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


So in extend module&#8217;s method are class method on that calling class.include module&#8217;s methods are instance method for object of calling class

</p>


<p>
<strong>4.Use active record association</strong>

Rails provides us association very nicely.

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">User</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'>  <span class="n">has_many</span> <span class="ss">:blogs</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="n">blog</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'>  <span class="n">belongs_to</span> <span class="ss">:user</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="vi">@user</span> <span class="o">=</span> <span class="no">User</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="n">params</span><span class="o">[</span><span class="ss">:id</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'><span class="vi">@blogs</span> <span class="o">=</span> <span class="no">Blog</span><span class="o">.</span><span class="n">where</span><span class="p">(</span><span class="ss">:user_id</span> <span class="o">=&gt;</span> <span class="n">params</span><span class="o">[</span><span class="ss">:user_id</span><span class="o">]</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>Instead of doing this.do</p>


<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="vi">@user</span> <span class="o">=</span> <span class="no">User</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="n">params</span><span class="o">[</span><span class="ss">:id</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'><span class="vi">@blogs</span> <span class="o">=</span> <span class="vi">@user</span><span class="o">.</span><span class="n">blogs</span>
</span></code></pre></td></tr></table></div></figure>

</p>


<p>
<strong>5. Use Scope rather than writing complex finders</strong>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Book</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">search_books</span><span class="p">(</span><span class="n">params</span><span class="o">=</span><span class="p">{})</span>
</span><span class='line'>    <span class="n">where</span><span class="p">(</span><span class="s1">&#39;name like ? and price &gt; ? and published_date &gt; =?&#39;</span><span class="p">,</span> <span class="s2">&quot;%</span><span class="si">#{</span><span class="n">params</span><span class="o">[</span><span class="ss">:name</span><span class="o">]</span><span class="si">}</span><span class="s2">%&quot;</span><span class="p">,</span> <span class="mi">100</span><span class="p">,</span><span class="no">Date</span><span class="o">.</span><span class="n">today</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


Now suppose if you just need to find books based on published date you will create another method.That will duplicate your code

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Book</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">search_books</span><span class="p">(</span><span class="n">params</span><span class="o">=</span><span class="p">{})</span>
</span><span class='line'>    <span class="n">where</span><span class="p">(</span><span class="s1">&#39;name like ? and price &gt; ? and published_date &gt; =?&#39;</span><span class="p">,</span> <span class="s2">&quot;%</span><span class="si">#{</span><span class="n">params</span><span class="o">[</span><span class="ss">:name</span><span class="o">]</span><span class="si">}</span><span class="s2">%&quot;</span><span class="p">,</span> <span class="mi">100</span><span class="p">,</span><span class="no">Date</span><span class="o">.</span><span class="n">today</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">search_by_published_date</span><span class="p">(</span><span class="n">date</span><span class="p">)</span>
</span><span class='line'>    <span class="n">where</span><span class="p">(</span><span class="s1">&#39;published_date &gt; =?&#39;</span><span class="p">,</span><span class="n">date</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


In this case you can use scope

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Book</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'>  <span class="n">scope</span> <span class="ss">:by_published_date</span><span class="p">,</span><span class="nb">lambda</span><span class="p">{</span><span class="o">|</span><span class="n">d</span><span class="o">|</span><span class="p">{</span><span class="ss">:where</span> <span class="o">=&gt;</span> <span class="o">[</span><span class="s1">&#39;published_date &gt;= ?&#39;</span><span class="p">,</span><span class="n">d</span><span class="o">]</span><span class="p">}}</span>
</span><span class='line'>  <span class="n">scope</span> <span class="ss">:by_name</span><span class="p">,</span><span class="nb">lambda</span><span class="p">{</span><span class="o">|</span><span class="n">n</span><span class="o">|</span><span class="p">{</span><span class="ss">:where</span> <span class="o">=&gt;</span> <span class="o">[</span><span class="s1">&#39;name like ?&#39;</span><span class="p">,</span><span class="s2">&quot;%</span><span class="si">#{</span><span class="n">n</span><span class="si">}</span><span class="s2">%&quot;</span><span class="o">]</span><span class="p">}}</span>
</span><span class='line'>  <span class="n">scope</span> <span class="ss">:by_price</span><span class="p">,</span><span class="nb">lambda</span><span class="p">{</span><span class="o">|</span><span class="nb">p</span><span class="o">|</span><span class="p">{</span><span class="ss">:where</span> <span class="o">=&gt;</span> <span class="o">[</span><span class="s1">&#39;price =?&#39;</span><span class="p">,</span><span class="nb">p</span><span class="p">}}</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


Now you can use scope like

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Book</span><span class="o">.</span><span class="n">by_published_date</span><span class="p">(</span><span class="no">Date</span><span class="o">.</span><span class="n">today</span><span class="p">)</span><span class="o">.</span><span class="n">by_name</span><span class="p">(</span><span class="s1">&#39;rails&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">by_price</span><span class="p">(</span><span class="mi">100</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>

</p>


<p>
<strong>6. Do Metaprogramming</strong>


<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Plan</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'>  <span class="no">ACTIVE</span><span class="o">=</span><span class="s1">&#39;active&#39;</span>
</span><span class='line'>  <span class="no">INACTIVE</span> <span class="o">=</span> <span class="s1">&#39;inactive&#39;</span>
</span><span class='line'>  <span class="no">IN_PROGRESS</span> <span class="o">=</span> <span class="s1">&#39;in progress&#39;</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">active?</span>
</span><span class='line'>    <span class="n">status</span> <span class="o">==</span> <span class="no">ACTIVE</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">inactive?</span>
</span><span class='line'>    <span class="n">status</span> <span class="o">==</span> <span class="no">INACTIVE</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">in_progress?</span>
</span><span class='line'>    <span class="n">status</span> <span class="o">==</span> <span class="no">IN_PROGRESS</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>

now reduce code with meta programming

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Plan</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'>  <span class="no">ACTIVE</span><span class="o">=</span><span class="s1">&#39;active&#39;</span>
</span><span class='line'>  <span class="no">INACTIVE</span> <span class="o">=</span> <span class="s1">&#39;inactive&#39;</span>
</span><span class='line'>  <span class="no">IN_PROGRESS</span> <span class="o">=</span> <span class="s1">&#39;in progress&#39;</span>
</span><span class='line'>
</span><span class='line'>  <span class="o">[</span><span class="no">ACTIVE</span><span class="p">,</span> <span class="no">INACTIVE</span><span class="p">,</span><span class="no">IN_PROGRESS</span><span class="o">].</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">s</span><span class="o">|</span>
</span><span class='line'>    <span class="n">plan_status</span> <span class="o">=</span> <span class="o">&lt;&lt;-</span><span class="no">EOF</span>
</span><span class='line'><span class="sh">      def is_#{s}?</span>
</span><span class='line'><span class="sh">        self.status ==  &#39;#{s}&#39;</span>
</span><span class='line'><span class="sh">      end</span>
</span><span class='line'><span class="no">    EOF</span>
</span><span class='line'>    <span class="nb">class_eval</span> <span class="n">plan_status</span><span class="p">,</span> <span class="bp">__FILE__</span><span class="p">,</span> <span class="bp">__LINE__</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>

</p>


<p>
<strong>7. Use full text search engine</strong>
  <p>
if you app require search based on all the attribute on model or something like that then writing messy code is not an good idea.
Better way is to use any search engine like Solr, Sphinx
 </p>

<p>Search engine indexed the data.so it gives you results based on search query against any full words in the indexed data</p>
</p>


<p>
  I have covered most of the steps here to enhance your Rails Models and keep your Rails Models clean,
  Here are some links to read more about these things.

  Reference links :
</p>


<ul>
  <li><a href="http://blog.rubybestpractices.com/posts/gregory/008-decorator-delegator-disco.html">http://blog.rubybestpractices.com/posts/gregory/008-decorator-delegator-disco.html</a></li>
  <li><a href="http://khelll.com/blog/ruby/delegation-in-ruby/">http://khelll.com/blog/ruby/delegation-in-ruby/</a></li>
  <li><a href="http://sunspot.github.com/">http://sunspot.github.com/</a></li>
  <li><a href="http://freelancing-god.github.com/ts/en/">http://freelancing-god.github.com/ts/en/</a></li>
</ul>


<p>Thanks for reading this post :&ndash;)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Background Processing Using Rails Runner]]></title>
    <link href="http://raysrashmi.com/2012/05/03/background-processing-using-rails-runner/"/>
    <updated>2012-05-03T00:00:00+02:00</updated>
    <id>http://raysrashmi.com/2012/05/03/background-processing-using-rails-runner</id>
    <content type="html"><![CDATA[<p>Rails comes with a built-in tool for running tasks independent of the web cycle. The <code>rails runner</code> command simply loads the default Rails environment and then executes some specified Ruby code.</p>




<!--more-->


<p>Some of use cases :</p>

<ol>
  <li>Data import</li>
  <li>Execute methods of your models.</li>
  <li>Sending batch emails</li>
  <li>Nightly report generation</li>
</ol>




<p>Showing here some code example for</p>




<p>Let&#8217;s say you want to generate a nightly report and send it out to multiple users</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">rails</span> <span class="n">runner</span> <span class="no">DailyReport</span><span class="o">.</span><span class="n">send_me!</span>
</span></code></pre></td></tr></table></div></figure>




<p>This will execute <code> send_me! </code> method for <code> DailyReport </code> class.</p>




<p><code> rails runner </code> will give us access to all rails environment so we can even use the Active Record finder methods to extract data from our application.</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">rails</span> <span class="n">runner</span> <span class="s1">&#39;User.all.map(&amp;:email).each {|e| puts e }&#39;</span>
</span></code></pre></td></tr></table></div></figure>




<p>Here we are just listing out emails of all users in our system.</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">rails</span> <span class="n">runner</span> <span class="o">-</span><span class="n">h</span>
</span></code></pre></td></tr></table></div></figure>




<p>Output will be</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="ss">Usage</span><span class="p">:</span> <span class="n">runner</span> <span class="o">[</span><span class="n">options</span><span class="o">]</span> <span class="p">(</span><span class="s1">&#39;Some.ruby(code)&#39;</span> <span class="ow">or</span> <span class="n">a</span> <span class="n">filename</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="o">-</span><span class="n">e</span><span class="p">,</span> <span class="o">--</span><span class="n">environment</span><span class="o">=</span><span class="nb">name</span>           <span class="no">Specifies</span> <span class="n">the</span> <span class="n">environment</span> <span class="k">for</span> <span class="n">the</span> <span class="n">runner</span> <span class="n">to</span> <span class="n">operate</span> <span class="n">under</span> <span class="p">(</span><span class="nb">test</span><span class="o">/</span><span class="n">development</span><span class="o">/</span><span class="n">production</span><span class="p">)</span><span class="o">.</span>
</span><span class='line'>                                     <span class="ss">Default</span><span class="p">:</span> <span class="n">development</span>
</span><span class='line'>
</span><span class='line'>    <span class="o">-</span><span class="n">h</span><span class="p">,</span> <span class="o">--</span><span class="n">help</span>                       <span class="no">Show</span> <span class="n">this</span> <span class="n">help</span> <span class="n">message</span><span class="o">.</span>
</span><span class='line'>
</span><span class='line'><span class="no">You</span> <span class="n">can</span> <span class="n">also</span> <span class="n">use</span> <span class="n">runner</span> <span class="n">as</span> <span class="n">a</span> <span class="n">shebang</span> <span class="n">line</span> <span class="k">for</span> <span class="n">your</span> <span class="n">scripts</span> <span class="n">like</span> <span class="ss">this</span><span class="p">:</span>
</span><span class='line'><span class="o">-------------------------------------------------------------</span>
</span><span class='line'><span class="c1">#!/usr/bin/env /Users/raysrashmi/checkouts/foobar/script/rails runner</span>
</span><span class='line'>
</span><span class='line'><span class="no">Product</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="ss">:all</span><span class="p">)</span><span class="o">.</span><span class="n">each</span> <span class="p">{</span> <span class="o">|</span><span class="nb">p</span><span class="o">|</span> <span class="nb">p</span><span class="o">.</span><span class="n">price</span> <span class="o">*=</span> <span class="mi">2</span> <span class="p">;</span> <span class="nb">p</span><span class="o">.</span><span class="n">save!</span> <span class="p">}</span>
</span><span class='line'><span class="o">-------------------------------------------------------------</span>
</span></code></pre></td></tr></table></div></figure>


<p>A sample crontab to run that script might look like</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>  <span class="vi">@daily</span>  <span class="sr">/Users/</span><span class="n">raysrashmi</span><span class="o">/</span><span class="n">checkouts</span><span class="o">/</span><span class="n">foobar</span><span class="o">/</span><span class="n">script</span><span class="o">/</span><span class="n">rails</span> <span class="n">runner</span> <span class="o">-</span><span class="n">e</span> <span class="n">production</span> <span class="s1">&#39;DailyReport.send_me!&#39;</span>
</span></code></pre></td></tr></table></div></figure>




<p>This script will run daily to send out daily report.

The Rails Runner is useful for short tasks that need to run infrequently.

But jobs that require more heavy work are best handled by other libraries.

I use <code> rails runner </code> whenever I need to run a small task.
</p>


<p>Reference links :</p>

<ul>
  <li><a href="http://www.ameravant.com/posts/recurring-tasks-in-ruby-on-rails-using-runner-and-cron-jobs">http://www.ameravant.com/posts/recurring-tasks-in-ruby-on-rails-using-runner-and-cron-jobs</a></li>
</ul>


<p>There are other better library available for handling background process. But here I wanted to talk about <code>rails runner</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rails 3 Responders]]></title>
    <link href="http://raysrashmi.com/2012/05/01/rails-3-responders/"/>
    <updated>2012-05-01T00:00:00+02:00</updated>
    <id>http://raysrashmi.com/2012/05/01/rails-3-responders</id>
    <content type="html"><![CDATA[<p>So we have a problem here in Controllers.

As our application grows our controllers grows.
We will be in trouble when we have alternative formats in our controllers like JSON, XML.
</p>


<!--more-->


<p>You might need to respond both in JSON and XML or might be only JSON in your controller.</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">BlogsController</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span> <span class="no">ApplicationController</span>
</span><span class='line'>   <span class="k">def</span> <span class="nf">index</span>
</span><span class='line'>     <span class="vi">@blogs</span> <span class="o">=</span> <span class="no">Blog</span><span class="o">.</span><span class="n">all</span>
</span><span class='line'>     <span class="n">respond_to</span> <span class="k">do</span> <span class="o">|</span><span class="nb">format</span><span class="o">|</span>
</span><span class='line'>     <span class="nb">format</span><span class="o">.</span><span class="n">html</span>
</span><span class='line'>     <span class="nb">format</span><span class="o">.</span><span class="n">xml</span> <span class="p">{</span> <span class="n">render</span> <span class="ss">:xml</span> <span class="o">=&amp;</span><span class="n">gt</span><span class="p">;</span> <span class="vi">@blogs</span> <span class="p">}</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">show</span>
</span><span class='line'>    <span class="vi">@blog</span> <span class="o">=</span> <span class="no">Blog</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="n">params</span><span class="o">[</span><span class="ss">:id</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'>    <span class="n">respond_to</span> <span class="k">do</span> <span class="o">|</span><span class="nb">format</span><span class="o">|</span>
</span><span class='line'>      <span class="nb">format</span><span class="o">.</span><span class="n">html</span>
</span><span class='line'>      <span class="nb">format</span><span class="o">.</span><span class="n">xml</span> <span class="p">{</span> <span class="n">render</span> <span class="ss">:xml</span> <span class="o">=&amp;</span><span class="n">gt</span><span class="p">;</span> <span class="vi">@blog</span> <span class="p">}</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<p>You can see here that in both the action we are responding with HTML and XML.

Rails 3 introduced a new set of methods called <code>responders</code> that abstract the code so that the controller becomes much simpler.
</p>


<p>Here is our example written using <code>responders</code></p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>  <span class="k">class</span> <span class="nc">BlogsController</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span> <span class="no">ApplicationController</span>
</span><span class='line'>  <span class="n">respond_to</span> <span class="ss">:html</span><span class="p">,</span> <span class="ss">:xml</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">index</span>
</span><span class='line'>    <span class="vi">@blogs</span> <span class="o">=</span> <span class="no">Blog</span><span class="o">.</span><span class="n">all</span>
</span><span class='line'>    <span class="n">respond_with</span><span class="p">(</span><span class="vi">@blogs</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">show</span>
</span><span class='line'>    <span class="vi">@blog</span> <span class="o">=</span> <span class="no">Blog</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="n">params</span><span class="o">[</span><span class="ss">:id</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'>    <span class="n">respond_with</span><span class="p">(</span><span class="vi">@blog</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<p>This looks more cleaner No ?

The entire <code>respond_to</code> block is gone now.
</p>




<p></p>


<p><strong>I know this feature is very old. But it&rsquo;s very important to use this feature for more cleaner code.</strong></p></p>

<p>Reference links :</p>

<ul>
  <li><a href="http://archives.ryandaigle.com/articles/2009/8/6/what-s-new-in-edge-rails-cleaner-restful-controllers-w-respond_with">http://archives.ryandaigle.com/articles/2009/8/6/what-s-new-in-edge-rails-cleaner-restful-controllers-w-respond_with</a></li>
  <li><a href="http://blog.plataformatec.com.br/tag/respond_with/">http://blog.plataformatec.com.br/tag/respond_with/</a></li>
</ul>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[OAuth with OmniAuth and Github]]></title>
    <link href="http://raysrashmi.com/2012/04/22/oauth-omniauth-github/"/>
    <updated>2012-04-22T00:00:00+02:00</updated>
    <id>http://raysrashmi.com/2012/04/22/oauth-omniauth-github</id>
    <content type="html"><![CDATA[<p>
If you want to authenticate your user in your app with Github  use omniauth-github strategy for that.
Here I am describing how you can do that very quickly.

OmniAuth provides list of  strategies to use many OAuth for your application. Here is the 
<a href="https://github.com/intridea/omniauth/wiki/List-of-Strategies">List of Strategies</a>.
</p>




<!--more-->




<p>
  Github uses the OAuth2 flow.

  First of all you have to register your app with Github <a href="https://github.com/settings/applications">GitHub Applications Page</a>.
  Create a new application here and get Client ID and Secret.

  Here is how can you obtain Client ID and Secret from Github.
</p>




<p>
  <img src="http://farm4.staticflickr.com/3716/9240891751_409f794720_m.jpg">
</p>




<p>
Steps to use these in your app.

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'> <span class="n">rails</span> <span class="kp">new</span> <span class="no">GithubAuthApp</span>
</span></code></pre></td></tr></table></div></figure>
 
Update your Gemfile add <code> omniauth-github </code>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'> <span class="n">gem</span> <span class="s2">&quot;omniauth-github&quot;</span>
</span></code></pre></td></tr></table></div></figure>
 
Create a config/initializers/omniauth.rb file.
Paste your key instead of XXXX, and secret instead of YYYY

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>
</span><span class='line'><span class="n">use</span> <span class="ss">OmniAuth</span><span class="p">:</span><span class="ss">:Builder</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">provider</span> <span class="ss">:github</span><span class="p">,</span> <span class="no">XXXX</span><span class="p">,</span> <span class="no">YYYY</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>
 
</p>




<p>
All done start you server</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'> <span class="n">bundle</span> <span class="nb">exec</span> <span class="n">rails</span> <span class="n">server</span>
</span></code></pre></td></tr></table></div></figure>


<p>Just open your app in browser with URL</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'> <span class="ss">http</span><span class="p">:</span><span class="sr">//</span><span class="ss">localhost</span><span class="p">:</span><span class="mi">3000</span><span class="o">/</span><span class="n">auth</span><span class="o">/</span><span class="n">github</span>
</span></code></pre></td></tr></table></div></figure>


<p>You will be redirecting to Github for authentication.</p>

<p>After success your app will redirect to your given callback URL with information and token!</p>

<p>At <a href="http://www.omniauth.org/">OmniAuth.org</a> you can try out different -2 Strategies.</p>


<p>Useful links :</p>

<ul>
    <li><a href="http://www.omniauth.org/">OmniAuth.org</a> One page for all you need.</li>
    <li><a href="https://github.com/intridea/omniauth-github">omniauth-github</a> gem.</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Basic Difference between Proc and Lambda in Ruby]]></title>
    <link href="http://raysrashmi.com/2012/02/19/basic-difference-between-proc-and-lambda-in-ruby/"/>
    <updated>2012-02-19T00:00:00+01:00</updated>
    <id>http://raysrashmi.com/2012/02/19/basic-difference-between-proc-and-lambda-in-ruby</id>
    <content type="html"><![CDATA[<p><strong>Proc</strong> =&gt; <tt><a href="http://www.ruby-doc.org/core-1.9.3/Proc.html">Proc</a></tt> 
objects are blocks of code that have been bound to a set of local variables.
Once bound, the code may be called in different contexts and still access those variables.
 <!--more--></p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">my_proc</span> <span class="o">=</span> <span class="nb">proc</span> <span class="k">do</span> <span class="o">|</span><span class="n">a</span><span class="o">|</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;number is </span><span class="si">#{</span><span class="n">a</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="n">my_proc</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="mi">10</span> <span class="p">)</span> <span class="c1"># number is 10</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>lambda</strong></p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">my_lambda</span> <span class="o">=</span> <span class="nb">lambda</span> <span class="k">do</span><span class="o">|</span><span class="n">a</span><span class="o">|</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;number is </span><span class="si">#{</span><span class="n">a</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="n">my_lambda</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="mi">10</span> <span class="p">)</span> <span class="c1"># number is 10</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>Difference between both of them</strong>in Ruby-1.9.3</p>

<ol>
  <li>
    lambda is very specific for parameters passing to it but proc not -:
    
<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>    <span class="n">my_proc</span> <span class="o">=</span> <span class="nb">proc</span> <span class="k">do</span><span class="o">|</span><span class="n">a</span><span class="o">|</span>
</span><span class='line'>      <span class="nb">puts</span> <span class="s2">&quot;this is proc&quot;</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>    <span class="n">my_proc</span><span class="o">.</span><span class="n">call</span> <span class="c1">#this is proc</span>
</span><span class='line'>
</span></code></pre></td></tr></table></div></figure>

    
<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>    <span class="n">my_lambda</span> <span class="o">=</span><span class="nb">lambda</span> <span class="k">do</span> <span class="o">|</span><span class="n">a</span><span class="o">|</span>
</span><span class='line'>      <span class="nb">puts</span> <span class="s2">&quot;this is lambda&quot;</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>    <span class="n">my_lambda</span><span class="o">.</span><span class="n">call</span> <span class="c1">#will throw error &quot;wrong number of arguments&quot;</span>
</span><span class='line'>
</span></code></pre></td></tr></table></div></figure>


    In ruby-1.8.7 it just give you warning not error
  </li>
  <li>
    Second is about return mean -:
    
<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>    <span class="k">def</span> <span class="nf">run_a_proc</span><span class="p">(</span><span class="nb">p</span><span class="p">)</span>
</span><span class='line'>      <span class="nb">puts</span> <span class="s2">&quot;starting proc&quot;</span>
</span><span class='line'>      <span class="nb">p</span><span class="o">.</span><span class="n">call</span>
</span><span class='line'>      <span class="nb">puts</span> <span class="s2">&quot;Ending proc&quot;</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">test_proc</span>
</span><span class='line'>      <span class="n">run_a_proc</span> <span class="nb">lambda</span><span class="p">{</span><span class="nb">puts</span> <span class="s1">&#39;this is lambda&#39;</span><span class="p">;</span> <span class="k">return</span><span class="p">}</span>
</span><span class='line'>      <span class="n">run_a_proc</span> <span class="nb">proc</span><span class="p">{</span><span class="nb">puts</span> <span class="s1">&#39;this is proc&#39;</span><span class="p">;</span> <span class="k">return</span><span class="p">}</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>    <span class="n">test_proc</span>
</span><span class='line'>
</span></code></pre></td></tr></table></div></figure>

    the output is -:

    
<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>    <span class="n">starting</span> <span class="nb">proc</span>
</span><span class='line'>    <span class="n">this</span> <span class="n">is</span> <span class="nb">lambda</span>
</span><span class='line'>    <span class="no">Ending</span> <span class="nb">proc</span>
</span><span class='line'>    <span class="n">starting</span> <span class="nb">proc</span>
</span><span class='line'>    <span class="n">this</span> <span class="n">is</span> <span class="nb">proc</span>
</span><span class='line'>
</span></code></pre></td></tr></table></div></figure>


  </li>
</ol>




<p>
so difference is lambda return within it but the proc return from where it is called

if we modified test_proc method like
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">test_proc</span>
</span><span class='line'>  <span class="n">run_a_proc</span> <span class="nb">proc</span><span class="p">{</span><span class="nb">puts</span> <span class="s1">&#39;this is proc&#39;</span><span class="p">;</span> <span class="k">return</span><span class="p">}</span>
</span><span class='line'>  <span class="n">run_a_proc</span> <span class="nb">lambda</span><span class="p">{</span><span class="nb">puts</span> <span class="s1">&#39;this is lambda&#39;</span><span class="p">;</span> <span class="k">return</span><span class="p">}</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>now the output will be &ndash;:</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">starting</span> <span class="nb">proc</span>
</span><span class='line'><span class="n">this</span> <span class="n">is</span> <span class="nb">proc</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Proc call in ruby1.9.3]]></title>
    <link href="http://raysrashmi.com/2012/02/18/call-proc-in-ruby-1-9.3/"/>
    <updated>2012-02-18T00:00:00+01:00</updated>
    <id>http://raysrashmi.com/2012/02/18/call-proc-in-ruby-1-9.3</id>
    <content type="html"><![CDATA[<p>
  Call a proc in different ways
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">my_proc</span> <span class="o">=</span> <span class="no">Proc</span><span class="o">.</span><span class="n">new</span> <span class="k">do</span><span class="o">|</span><span class="nb">name</span><span class="o">|</span>
</span><span class='line'>  <span class="s2">&quot;this is </span><span class="si">#{</span><span class="nb">name</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>READMORE
You can call this proc by 4 ways</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">my_proc</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;rays&#39;</span><span class="p">)</span>
</span><span class='line'><span class="n">my_proc</span><span class="o">.</span><span class="p">(</span><span class="s1">&#39;rashmi&#39;</span><span class="p">)</span>
</span><span class='line'><span class="n">my_proc</span><span class="o">.</span><span class="p">(</span><span class="s2">&quot;rita&quot;</span><span class="p">)</span>
</span><span class='line'><span class="n">my_proc</span> <span class="o">===</span> <span class="s2">&quot;richa&quot;</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Asset Pipeline with Rails 3.1]]></title>
    <link href="http://raysrashmi.com/2011/11/29/asset-pipeline.html/"/>
    <updated>2011-11-29T00:00:00+01:00</updated>
    <id>http://raysrashmi.com/2011/11/29/asset-pipeline.html</id>
    <content type="html"><![CDATA[<p>
This is the new very interesting and useful  feature in Rails 3.1.
</p>


<p><strong>Asset Pipeline</strong></p>

<ul>
    <li>The asset pipeline provides a framework to concatenate and minify or compress JavaScript and CSS assets.</li>
    <li>It allows you to write these assets in other languages like CoffeeScript, Sass and ERB</li>
    <li>Asset pipeline helpful in production environment cause it will reduce the number of request which browser make.</li>
</ul>


<!--more-->




<p>Prior to Rails 3.1 these features were added through third-party Ruby libraries such as Jammit and Sprockets. Rails 3.1 is integrated with Sprockets through Action Pack which depends on the sprockets gem, by default.</p>


<p><strong>Asset Organization</strong></p>

<div>Prior to Rails 3.1 -:</div>


<ul>
    <li>Currently we have all assets in one directory public.we are putting all javascripts either it is third party javascirpt or your own javascript.Its not good way to treat them because like in rails we have a very good organization to put our code file.</li>
    <li>Its not not easy to update our javascirpt code(like if we are using third party code)</li>
</ul>


<p>In Rails 3.1-:</p>

<p>There are three directories</p>

<ul>
    <li><strong>app/assets-:</strong> it holds the code write for specific appication</li>
    <li><strong>lib/assets -:</strong> it holds the generic code we write for our application(for example if we extending any jQuery function)</li>
    <li><strong>vendor/assets -:</strong> it holds the third party code(like we are using any jQuery plugin)</li>
</ul>


<p>so if you want to access application.css in app/assets/stylesheets.you can just access the url localhost:3000/assets/application.css</p>


<p>
you can add additional path to the pipeline in config/application.rb. For example:

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">config</span><span class="o">.</span><span class="n">assets</span><span class="o">.</span><span class="n">paths</span> <span class="o">&lt;&lt;</span> <span class="no">Rails</span><span class="o">.</span><span class="n">root</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="s2">&quot;app&quot;</span><span class="p">,</span> <span class="s2">&quot;assets&quot;</span><span class="p">,</span> <span class="s2">&quot;flash&quot;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>

</p>


<p><strong>Manifest files and Directives</strong></p>

<ul>
    <li>Manifest files used by Sprockets(a gem support Asset pipe line its is added in rails 3.1 app by default),in these files contains instruction that tell Sprockets which files are required to build a single CSS or Javascript file,these instructions are called Directives</li>
    <li>In Rails 3.1 Default Directives are application.js in app/assets./javascripts directory and application.css in app/assets/stylesheets</li>
</ul>


<p><strong>Assets In Development </strong></p>

<p><p>
In Development environment all assets are served as individual files
For Example in app/assets/javascripts/application.js</p>

<p><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>    <span class="sr">//</span><span class="o">=</span> <span class="nb">require</span> <span class="n">core</span>
</span><span class='line'>    <span class="sr">//</span><span class="o">=</span> <span class="nb">require</span> <span class="n">blogs</span><span class="o">&lt;</span><span class="sr">/blockquote&gt;</span>
</span></code></pre></td></tr></table></div></figure></p>

<p>after converting in HTML it will look like</p>

<p><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>    <span class="o">&lt;</span><span class="n">script</span> <span class="n">src</span><span class="o">=</span><span class="s2">&quot;/assets/core.js?body=1&quot;</span> <span class="n">type</span><span class="o">=</span><span class="s2">&quot;text/javascript&quot;</span><span class="o">&gt;&lt;</span><span class="sr">/script&gt;</span>
</span><span class='line'><span class="sr">    &lt;script src=&quot;/</span><span class="n">assets</span><span class="o">/</span><span class="n">blogs</span><span class="o">.</span><span class="n">js?body</span><span class="o">=</span><span class="mi">1</span><span class="s2">&quot; type=&quot;</span><span class="n">text</span><span class="o">/</span><span class="n">javascript</span><span class="s2">&quot;&gt;&lt;/script&gt;</span>
</span></code></pre></td></tr></table></div></figure></p>

<p><p>If turn off debugging by setting config.assets.debug = false in config/environments/development.rb
above file will generate</p></p>

<p><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>    <span class="o">&lt;</span><span class="n">script</span> <span class="n">src</span><span class="o">=</span><span class="s2">&quot;/assets/application.js?body=1&quot;</span> <span class="n">type</span><span class="o">=</span><span class="s2">&quot;text/javascript&quot;</span><span class="o">&gt;&lt;</span><span class="sr">/script&gt;</span>
</span><span class='line'><span class="sr">    </span>
</span></code></pre></td></tr></table></div></figure></p>

<p><strong>In Production</strong>
<p>
Rails server complied assets using <strong>Fingerprinting Scheme</strong>
</p>
<p>
<strong>In Fingerprinting</strong> scheme a hash of  content is attached to the end of file to uniquely identified the file
blogs-908e25f4bf641868d8683022a5b62f54.css
</p>
<p>
Prior rails 3.1 a time stamp query string is attached to file name
<span>stylesheets/blogs.css?1409495796</span>
</p></p>

<p><p>For example &ndash;:</p></p>

<p><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>    <span class="o">&lt;</span><span class="sx">%= javascript_include_tag :application%&gt;</span>
</span><span class='line'><span class="sx">    &lt;%=</span> <span class="n">stylesheet_link_tag</span> <span class="s2">&quot;application&quot;</span> <span class="o">%&gt;</span>
</span><span class='line'>
</span></code></pre></td></tr></table></div></figure></p>

<p>It will compile in to</p>

<p><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>    <span class="o">&lt;</span><span class="n">script</span> <span class="n">src</span><span class="o">=</span><span class="s2">&quot;/assets/application-908e25f4bf641868d8683022a5b62f54.js&quot;</span> <span class="n">type</span> <span class="o">=</span><span class="s2">&quot;text/javascript&quot;</span><span class="o">&gt;&lt;</span><span class="sr">/script&gt;</span>
</span><span class='line'><span class="sr">    &lt;link href=&quot;/</span><span class="n">assets</span><span class="o">/</span><span class="n">application</span><span class="o">&ndash;</span><span class="mi">4</span><span class="n">dd5b109ee3439da54f5bdfd78a80473</span><span class="o">.</span><span class="n">css</span><span class="s2">&quot; media=&quot;</span><span class="n">screen</span><span class="s2">&quot; rel=&quot;</span><span class="n">stylesheet</span><span class="s2">&quot; type=&quot;</span><span class="n">text</span><span class="o">/</span><span class="n">css</span><span class="s2">&quot;&gt;</span>
</span><span class='line'><span class="s2">  </span>
</span></code></pre></td></tr></table></div></figure></p>

<p><p>
The fingerprinting behavior is controlled by the setting of <b>config.assets.digest</b> setting in Rails (which is <b>true</b> for production, <b>false</b> for everything else)
</p>
<strong>Useful Links &ndash;:</strong></p>

<p><ul>
<li>
  <a href="http://railscasts.com/episodes/279-understanding-the-asset-pipeline" target="_blank"><a href="http://railscasts.com/episodes/279-understanding-the-asset-pipeline">http://railscasts.com/episodes/279-understanding-the-asset-pipeline</a></a>
</li>
<li><a href="http://guides.rubyonrails.org/asset_pipeline.html" target="_blank"><a href="http://guides.rubyonrails.org/asset_pipeline.html">http://guides.rubyonrails.org/asset_pipeline.html</a></a></li>
</ul></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[jQuery Date/Time picker]]></title>
    <link href="http://raysrashmi.com/2011/05/15/jquery-datetime-picker/"/>
    <updated>2011-05-15T00:00:00+02:00</updated>
    <id>http://raysrashmi.com/2011/05/15/jquery-datetime-picker</id>
    <content type="html"><![CDATA[<p>To handle date and time both in calender use jQuery date time picker add-on</p>

<p>you need to inlcude javascript files</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">jquery</span><span class="o">-</span><span class="mi">1</span><span class="o">.</span><span class="mi">4</span><span class="o">.</span><span class="mi">1</span><span class="o">.</span><span class="n">min</span>
</span><span class='line'><span class="n">jquery</span><span class="o">-</span><span class="n">ui</span><span class="o">-</span><span class="mi">1</span><span class="o">.</span><span class="mi">8</span><span class="o">.</span><span class="mi">9</span><span class="o">.</span><span class="n">custom</span><span class="o">.</span><span class="n">min</span>
</span><span class='line'><span class="n">jquery</span><span class="o">-</span><span class="n">ui</span><span class="o">-</span><span class="n">timepicker</span><span class="o">-</span><span class="n">addon</span>
</span></code></pre></td></tr></table></div></figure>


<p>Inclue CSS files</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">jquery</span><span class="o">-</span><span class="n">ui</span><span class="o">-</span><span class="mi">1</span><span class="o">.</span><span class="mi">8</span><span class="o">.</span><span class="mi">9</span><span class="o">.</span><span class="n">custom</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;%</span><span class="c1">#= text_field_tag &#39; name&#39;,&#39;&#39;,:class =&gt; &#39;date_value&#39;%&gt;</span>
</span><span class='line'><span class="n">jQuery</span><span class="p">(</span><span class="s1">&#39;.&#39;</span><span class="n">date_value</span><span class="p">)</span><span class="o">.</span><span class="n">datetimepicker</span><span class="p">({</span>
</span><span class='line'>  <span class="ss">dateFormat</span><span class="p">:</span> <span class="s1">&#39;MM dd,yy&#39;</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Twitter Client script to retrieves all the unique http links in the last recent tweets]]></title>
    <link href="http://raysrashmi.com/2010/12/31/twitter-client-script-to-retrieves-all-the-unique-http-links-in-the-last-recent-tweets/"/>
    <updated>2010-12-31T00:00:00+01:00</updated>
    <id>http://raysrashmi.com/2010/12/31/twitter-client-script-to-retrieves-all-the-unique-http-links-in-the-last-recent-tweets</id>
    <content type="html"><![CDATA[<h1>Code to fetch link from tweets matched by given hash_tag</h1>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;rubygems&#39;</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;twitter&#39;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="n">hash_tag</span> <span class="o">=</span> <span class="no">ARGV</span><span class="o">.</span><span class="n">first</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="n">hash_tag</span><span class="o">.</span><span class="n">nil?</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;Please provide tag you want to fetch. Example &#39;rails&#39;, &#39;#rails&#39;&quot;</span>
</span><span class='line'>  <span class="nb">exit</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="nb">puts</span> <span class="s1">&#39;fetching......&#39;</span>
</span><span class='line'><span class="k">begin</span>
</span><span class='line'>  <span class="n">tweets</span> <span class="o">=</span> <span class="ss">Twitter</span><span class="p">:</span><span class="ss">:Search</span><span class="o">.</span><span class="n">new</span><span class="o">.</span><span class="n">hashtag</span><span class="p">(</span><span class="n">hash_tag</span><span class="p">)</span>
</span><span class='line'><span class="k">rescue</span> <span class="no">Exception</span> <span class="o">=&gt;</span> <span class="n">e</span>
</span><span class='line'>  <span class="c1"># Time out or any other error can occur here</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;Errors in fetching tweets </span><span class="si">#{</span><span class="n">e</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="n">links</span> <span class="o">=</span> <span class="o">[]</span>
</span><span class='line'><span class="n">tweets</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">tweet</span><span class="o">|</span>
</span><span class='line'>  <span class="n">links</span> <span class="o">&lt;&lt;</span> <span class="n">tweet</span><span class="o">.</span><span class="n">text</span><span class="o">.</span><span class="n">match</span><span class="p">(</span><span class="sr">/\bhttps?:\/\/\S+\b/</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">links</span> <span class="o">=</span> <span class="n">links</span><span class="o">.</span><span class="n">uniq</span>
</span><span class='line'><span class="nb">puts</span> <span class="n">links</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Include Class Methods and Validation Using Module in RubyOnRails]]></title>
    <link href="http://raysrashmi.com/2010/12/21/include-class-method-and-validation-using-module-in-rubyonrails/"/>
    <updated>2010-12-21T00:00:00+01:00</updated>
    <id>http://raysrashmi.com/2010/12/21/include-class-method-and-validation-using-module-in-rubyonrails</id>
    <content type="html"><![CDATA[

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">User</span>
</span><span class='line'>  <span class="kp">include</span> <span class="no">TestModule</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">module</span> <span class="nn">TestModule</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">test_instance_method</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;Test Method&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">included</span><span class="p">(</span><span class="n">base</span><span class="p">)</span>
</span><span class='line'>    <span class="n">base</span><span class="o">.</span><span class="n">extend</span> <span class="no">ClassMethods</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">module</span> <span class="nn">ClassMethods</span>
</span><span class='line'>    <span class="k">def</span> <span class="nf">my_class_method</span>
</span><span class='line'>      <span class="nb">puts</span> <span class="s2">&quot;Class Methods&quot;</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Here my_class_method is Class Method.we can define more class methods in module ClassMethods</p>

<p>Validations and call backs are called without prefix &lsquo;self&rsquo;. so for validations and call backs
we have to explicitly set the class</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">module</span> <span class="nn">TestModule</span>
</span><span class='line'>  <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">included</span><span class="p">(</span><span class="n">base</span><span class="p">)</span>
</span><span class='line'>    <span class="n">base</span><span class="o">.</span><span class="n">validates_presence_of</span> <span class="ss">:bar</span>
</span><span class='line'>    <span class="n">base</span><span class="o">.</span><span class="n">before_save</span> <span class="ss">:some_method</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Routes in Rails3]]></title>
    <link href="http://raysrashmi.com/2010/12/04/routes-in-rails3/"/>
    <updated>2010-12-04T00:00:00+01:00</updated>
    <id>http://raysrashmi.com/2010/12/04/routes-in-rails3</id>
    <content type="html"><![CDATA[<h1>Rails3 define routes in more efficient way</h1>


<p>Routes for CRUD actions</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>     <span class="n">resources</span><span class="err">  </span> <span class="ss">:users</span>
</span></code></pre></td></tr></table></div></figure>


<p>Also define for multiple resources</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>     <span class="n">resources</span> <span class="ss">:users</span><span class="p">,</span> <span class="err"> </span><span class="ss">:blogs</span><span class="p">,</span> <span class="ss">:books</span>
</span></code></pre></td></tr></table></div></figure>


<p>Nested Routes</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>  <span class="n">resources</span> <span class="ss">:users</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">resources</span> <span class="err"> </span><span class="ss">:blogs</span>
</span><span class='line'>  <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Member and collection</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>  <span class="n">resources</span> <span class="ss">:blogs</span> <span class="k">do</span>
</span><span class='line'>    <span class="ss">:get</span> <span class="o">=&gt;</span> <span class="ss">:preview</span><span class="p">,</span> <span class="ss">:on</span> <span class="o">=&gt;</span><span class="ss">:member</span>
</span><span class='line'>    <span class="ss">:get</span> <span class="o">=&gt;</span> <span class="ss">:list</span><span class="p">,</span> <span class="ss">:on</span> <span class="o">=&gt;</span><span class="ss">:collection</span>
</span><span class='line'>  <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>if  we have more than one collection or member functions</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">resources</span><span class="err"> </span> <span class="ss">:blogs</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">member</span> <span class="k">do</span>
</span><span class='line'>     <span class="ss">:get</span><span class="err"> </span> <span class="ss">:preview</span>
</span><span class='line'>     <span class="ss">:put</span> <span class="ss">:sort</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>   <span class="n">collection</span> <span class="k">do</span>
</span><span class='line'>     <span class="ss">:get</span> <span class="ss">:list</span>
</span><span class='line'>     <span class="ss">:get</span> <span class="ss">:detailed_info</span>
</span><span class='line'>   <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Named Routes</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>  <span class="n">match</span> <span class="s2">&quot;history&quot;</span> <span class="o">=&gt;</span> <span class="s2">&quot;site#index&quot;</span><span class="p">,</span> <span class="ss">:as</span> <span class="o">=&gt;</span> <span class="ss">:history</span>
</span></code></pre></td></tr></table></div></figure>


<p>Adding :as makes it a named route so that we can use history_path      or      history_url in our application.</p>

<p>Route for Root</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>  <span class="n">root</span><span class="err">  </span> <span class="ss">:to</span> <span class="o">=&gt;</span> <span class="s2">&quot;home#index&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Constraints and Parameters in routes</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>  <span class="n">match</span> <span class="s2">&quot;search/:email(/:first_name/:last_name)&quot;</span> <span class="o">=&gt;</span> <span class="s2">&quot;users#search&quot;</span><span class="p">,</span><span class="err"> </span> <span class="ss">:constraints</span> <span class="o">=&gt;</span> <span class="p">{</span><span class="ss">:email</span> <span class="o">=&gt;</span> <span class="sr">/\A([^@\s]+)@((?:[-a-z0-9]+\.)+[a-z]{2,})\Z/i</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Here email is mandatory parameter and first_name and last is optional parameter and in constraints email format is defined</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ActiveModel in Rails3]]></title>
    <link href="http://raysrashmi.com/2010/11/24/activemodel-in-rails3-table-less-model-can-behave-like-active-record-model/"/>
    <updated>2010-11-24T00:00:00+01:00</updated>
    <id>http://raysrashmi.com/2010/11/24/activemodel-in-rails3-table-less-model-can-behave-like-active-record-model</id>
    <content type="html"><![CDATA[<p>In Rails3 Active Model feature is added that helps to use feature of active record class for a non active record class.In Active Model you can make Any Ruby Object Feel Like Active Record and can get Rails-style models with validations, serialization, callbacks, dirty tracking, internationalization, attributes, observers and all the other Rails goodness.</p>

<p>Here is the example &ndash;:</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Message</span>
</span><span class='line'>  <span class="kp">include</span> <span class="ss">ActiveModel</span><span class="p">:</span><span class="ss">:Validations</span>
</span><span class='line'>  <span class="kp">include</span> <span class="ss">ActiveModel</span><span class="p">:</span><span class="ss">:Conversion</span>
</span><span class='line'>  <span class="kp">include</span> <span class="ss">ActiveModel</span><span class="p">:</span><span class="ss">:Naming</span>
</span><span class='line'>
</span><span class='line'>  <span class="kp">attr_accessor</span> <span class="ss">:name</span><span class="p">,</span><span class="ss">:email</span><span class="p">,</span><span class="ss">:text_message</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">validates_presence_of</span> <span class="ss">:name</span>
</span><span class='line'>  <span class="n">validates_presence_of</span> <span class="ss">:email</span>
</span><span class='line'>  <span class="n">validates_presence_of</span> <span class="ss">:text_message</span>
</span><span class='line'>  <span class="n">validates_length_of</span> <span class="ss">:text_message</span><span class="p">,</span> <span class="ss">:maximum</span> <span class="o">=&amp;</span><span class="n">gt</span><span class="p">;</span> <span class="mi">500</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="n">attributes</span><span class="o">=</span><span class="p">{})</span>
</span><span class='line'>    <span class="n">attributes</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="nb">name</span><span class="p">,</span> <span class="n">value</span><span class="o">|</span>
</span><span class='line'>      <span class="nb">send</span><span class="p">(</span><span class="s2">&quot;</span><span class="si">#{</span><span class="nb">name</span><span class="si">}</span><span class="s2">=&quot;</span><span class="p">,</span> <span class="n">value</span><span class="p">)</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="vi">@message</span> <span class="o">=</span> <span class="no">Message</span><span class="o">.</span><span class="n">new</span><span class="p">({</span><span class="ss">:name</span> <span class="o">=&amp;</span><span class="n">gt</span><span class="p">;</span> <span class="s2">&quot;rays&quot;</span><span class="p">,</span> <span class="ss">:email</span> <span class="o">=&amp;</span><span class="n">gt</span><span class="p">;</span> <span class="s1">&#39;abc@example.com&#39;</span><span class="p">,</span> <span class="ss">:text_message</span> <span class="o">=&amp;</span><span class="n">gt</span><span class="p">;</span> <span class="s2">&quot;this my text message&quot;</span><span class="p">})</span>
</span><span class='line'>
</span><span class='line'><span class="vi">@message</span><span class="o">.</span><span class="n">valid?</span> <span class="o">=&gt;</span> <span class="kp">true</span>
</span><span class='line'>
</span><span class='line'><span class="vi">@message</span> <span class="o">=</span> <span class="no">Message</span><span class="o">.</span><span class="n">new</span><span class="p">({</span><span class="ss">:name</span> <span class="o">=&amp;</span><span class="n">gt</span><span class="p">;</span> <span class="s2">&quot;rays&quot;</span><span class="p">,</span> <span class="ss">:text_message</span> <span class="o">=&amp;</span><span class="n">gt</span><span class="p">;</span> <span class="s2">&quot;this my text message&quot;</span><span class="p">})</span>
</span><span class='line'>
</span><span class='line'><span class="vi">@message</span><span class="o">.</span><span class="n">valid?</span> <span class="o">=&gt;</span> <span class="kp">false</span>
</span><span class='line'>
</span><span class='line'><span class="vi">@message</span><span class="o">.</span><span class="n">errors</span> <span class="n">will</span> <span class="n">give</span> <span class="n">error</span> <span class="s2">&quot;Email can&#39;t be blank&quot;</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
</feed>
